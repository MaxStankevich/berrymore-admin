{"version":3,"sources":["config/authSlice.js","hooks/useAuth.js","pages/admin/components/header/Header.js","components/status-tag/StatusTag.js","utils/request.js","utils/user.js","components/delete-action/DeleteAction.js","pages/admin/components/orders/list/List.js","utils/order.js","pages/admin/components/orders/Orders.js","constants.js","pages/admin/components/users/Users.js","components/user-form/UserForm.js","pages/admin/components/profile/Profile.js","components/spinner/Spinner.js","pages/admin/components/users/edit/Edit.js","pages/admin/components/users/create/Create.js","config/formLayout.js","hooks/useDidUpdateEffect.js","pages/admin/components/orders/form/components/products/components/Packing.js","pages/admin/components/orders/form/components/products/components/Quantity.js","pages/admin/components/orders/form/components/products/Products.js","pages/admin/components/orders/form/components/customer-fields/CustomerFields.js","pages/admin/components/orders/form/components/order-fields/components/DeliveryMethod.js","pages/admin/components/orders/form/components/order-fields/OrderFields.js","pages/admin/components/orders/form/Form.js","pages/admin/components/orders/create/Create.js","pages/admin/components/orders/edit/Edit.js","pages/admin/components/orders/show/Show.js","pages/admin/components/customers/Customers.js","pages/admin/components/customers/show/Show.js","pages/admin/components/customers/form/Form.js","pages/admin/components/customers/edit/Edit.js","pages/admin/components/customers/create/Create.js","pages/admin/components/products/Products.js","pages/admin/components/products/form/Form.js","pages/admin/components/products/create/Create.js","pages/admin/components/products/edit/Edit.js","utils/getCurDateISO.js","pages/admin/components/statistics/Statistics.js","pages/admin/Admin.js","pages/login/Login.js","pages/order-form/OrderForm.js","App.js","config/store.js","reportWebVitals.js","index.js"],"names":["authSlice","createSlice","name","initialState","user","reducers","setUser","state","action","payload","actions","selectUser","auth","useAuth","dispatch","useDispatch","userFromRedux","useSelector","useMemo","JSON","parse","localStorage","getItem","isAdmin","role","updateUser","useCallback","data","newUser","setItem","stringify","Header","Layout","AdminHeader","history","useHistory","className","type","icon","LogoutOutlined","onClick","removeItem","push","COLORS","1","2","3","4","5","6","7","StatusTag","id","color","request","axios","create","baseURL","interceptors","use","config","token","headers","error","Promise","reject","response","status","notification","message","DeleteAction","onSuccess","url","successMessage","errorMessage","useState","deleteConfirmVisible","setDeleteConfirmVisible","deleteConfirmLoading","setDeleteConfirmLoading","title","placement","visible","onConfirm","delete","then","success","catch","err","console","finally","okText","cancelText","okButtonProps","loading","danger","onCancel","size","OrdersList","orders","showCustomer","fetchOrders","columns","dataIndex","render","createdAt","moment","format","products","length","map","product","unit","order_product","quantity","replace","record","amount","totalAmount","reduce","result","price","String","customer","to","phoneNumber","fullName","username","key","text","ghost","orderStatusId","userId","put","dataSource","rowKey","pagination","setOrdersParams","Orders","setLoading","setOrder","value","page","filter","order","getOrdersParams","params","setParams","statuses","setStatuses","statusesLoading","setStatusesLoading","users","setUsers","usersLoading","setUsersLoading","updateParams","prevParams","updateFilter","debounce","get","res","e","useEffect","interval","setInterval","clearInterval","style","width","allowClear","onChange","defaultValue","Option","placeholder","target","undefined","showSizeChanger","total","totalItems","current","defaultPageSize","USER_ROLES","admin","manager","Users","fetchUsers","Select","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","UserForm","Form","useForm","form","showPasswordFields","setShowPasswordFields","isEdit","onFinish","values","userData","email","password","roleId","Number","post","initialValues","scrollToFirstError","Item","label","QuestionCircleOutlined","rules","required","whitespace","val","hasFeedback","Password","autoComplete","dependencies","getFieldValue","validator","rule","resolve","htmlType","Profile","Spinner","props","EditUser","useParams","log","CreateUser","useDidUpdateEffect","fn","inputs","didMountRef","useRef","Packing","formValue","productId","packingValue","packing","MinusOutlined","fontSize","keyboard","min","PlusOutlined","Quantity","fieldName","totalPrice","find","pr","Object","keys","acc","getQuantityFromPacking","OrderForm","productsLoading","List","fields","add","remove","field","gutter","align","noStyle","shouldUpdate","selectedIds","fieldKey","disabled","item","includes","description","DeleteTwoTone","twoToneColor","CustomerFields","validatePhone","len","normalize","addonBefore","DeliveryMethod","productsValue","deliveryMethodId","yandexDeliveryAvailable","setFieldsValue","OrderFields","disabledDate","isBefore","isSame","Date","endOf","Group","customers","setCustomers","customersLoading","setCustomersLoading","customerRadio","setCustomerRadio","setProducts","setProductsLoading","fetchCustomers","searchTerm","search","resetFields","initialProducts","layout","errors","productsIds","deletedProducts","_destroy","concat","some","join","deliveryAddress","deliveryDate","paymentMethod","deliveryTime","notes","maxWidth","margin","onValuesChange","newValues","allValues","marginBottom","TextArea","showSearch","notFoundContent","onSearch","filterOption","CreateOrder","EditOrder","fetchOrder","warning","duration","ShowOrder","bordered","extra","deliveryMethod","orderStatus","orderStatusHistories","statusName","Customers","ShowCustomer","setCustomer","fetchCustomer","CustomerForm","organizationName","address","bankAccountNumber","bankName","payerAccountNumber","EditCustomer","CreateCustomer","Products","fetchProducts","ProductForm","CreateProduct","EditProduct","setProduct","getCurDateISO","getTime","getTimezoneOffset","toISOString","split","shift","getInitCreatedAt","lastSavedCreatedAtStart","getDateRangePickerValue","strRange","startDate","endDate","Statistics","setOrders","prod","orderStatusName","productsByName","groupBy","ordersByStatus","totalMoney","moneyData","money","moneyResult","currentProducts","unitWeight","all","raw","totalProducts","appendPadding","angleField","colorField","radius","innerRadius","autoRotate","content","textAlign","statistic","whiteSpace","overflow","textOverflow","formatter","RangePicker","str","Content","Sider","routes","path","component","Show","Create","Edit","Admin","location","useLocation","selectedMenuItem","pathname","match","breakpoint","collapsedWidth","theme","mode","selectedKeys","MailOutlined","TeamOutlined","IdcardFilled","DatabaseOutlined","UserOutlined","LineChartOutlined","padding","route","exact","Login","remember","accessToken","prefix","LockOutlined","setSuccess","href","paddingBottom","locale","App","userFromStorage","configureStore","reducer","authReducer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","store","document","getElementById"],"mappings":"mbAEaA,EAAYC,YAAY,CACnCC,KAAM,OACNC,aAAc,CACZC,KAAM,MAERC,SAAU,CACRC,QAAS,SAACC,EAAOC,GACfD,EAAMH,KAAOI,EAAOC,YAKXH,EAAYN,EAAUU,QAAtBJ,QAEFK,EAAa,SAAAJ,GAAK,OAAIA,EAAMK,KAAKR,MAE/BJ,IAAf,QCQea,EAtBC,WACd,IAAMC,EAAWC,cACXC,EAAgBC,YAAYN,GAE5BP,EAAOc,mBAAQ,WACnB,OAAOF,GAAiBG,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,KACnE,CAACN,IAEEO,EAAUL,mBAAQ,WACtB,OAAOd,GAAQA,EAAKoB,MAA2B,UAAnBpB,EAAKoB,KAAKtB,OACrC,CAACE,IAEEqB,EAAaC,uBAAY,SAACC,GAC9B,IAAMC,EAAO,2BAAQxB,GAASuB,GAE9Bb,EAASR,EAAQsB,IACjBP,aAAaQ,QAAQ,OAAQV,KAAKW,UAAUF,MAC3C,CAACxB,EAAMU,IAEV,MAAO,CAACV,EAAMqB,EAAYF,I,0BChBpBQ,EAAWC,IAAXD,OAqBOE,EAnBK,WAClB,IAAMnB,EAAWC,cACXmB,EAAUC,cAShB,OACE,cAACJ,EAAD,CAAQK,UAAU,oCAAlB,SACE,cAAC,IAAD,CAAQC,KAAK,UACLC,KAAM,cAACC,EAAA,EAAD,IAAmBC,QAVtB,WACb1B,EAASR,EAAQ,OACjBe,aAAaoB,WAAW,QACxBpB,aAAaoB,WAAW,SACxBP,EAAQQ,KAAK,MAKX,+C,uGCnBAC,EAAS,CACbC,EAAG,SACHC,EAAG,WACHC,EAAG,OACHC,EAAG,OACHC,EAAG,OACHC,EAAG,SACHC,EAAG,SAOUC,EAJG,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIlD,EAAP,EAAOA,KAAP,OAChB,cAAC,IAAD,CAAKmD,MAAOV,EAAOS,GAAnB,SAAyBlD,K,mBCVrBoD,E,OAAUC,EAAMC,OAAO,CAC3BC,QAAiF,UAGnFH,EAAQI,aAAaJ,QAAQK,KAAI,SAAUC,GACzC,IAAMC,ECT0BxC,aAAaC,QAAQ,SDcrD,OAJIuC,IACFD,EAAOE,QAAQ,kBAAoBD,GAG9BD,KACN,SAAUG,GAEX,OAAOC,QAAQC,OAAOF,MAGxBT,EAAQI,aAAaQ,SAASP,KAC5B,SAAAO,GACE,OAAOA,KAET,SAAUH,GAKR,OAH8B,MAA1BA,EAAMG,SAASC,QACjBC,IAAaL,MAAM,CAAEM,QAASN,EAAMG,SAASvC,KAAK0C,SAAW,6GAExDL,QAAQC,OAAOF,EAAMG,aAIjBZ,QEWAgB,EAxCM,SAAC,GAAiE,IAAD,IAA9DC,iBAA8D,MAAlD,aAAkD,EAAxCC,EAAwC,EAAxCA,IAAKC,EAAmC,EAAnCA,eAAgBC,EAAmB,EAAnBA,aACjE,EAAwDC,oBAAS,GAAjE,mBAAOC,EAAP,KAA6BC,EAA7B,KACA,EAAwDF,oBAAS,GAAjE,mBAAOG,EAAP,KAA6BC,EAA7B,KAEA,OACE,cAAC,IAAD,CACEC,MAAM,+KACNC,UAAU,WACVC,QAASN,EACTO,UAAW,WACTJ,GAAwB,GACxBzB,EAAQ8B,OAAOZ,GAAKa,MAAK,WACvBjB,IAAakB,QAAQ,CAAEjB,QAASI,IAChCF,OACCgB,OAAM,SAAAC,GACPpB,IAAaL,MAAM,CAAEM,QAASK,IAC9Be,QAAQ1B,MAAMyB,MACbE,SAAQ,WACTX,GAAwB,GACxBF,GAAwB,OAG5Bc,OAAO,6CACPC,WAAW,uCACXC,cAAe,CAAEC,QAAShB,EAAsBiB,QAAQ,GACxDC,SAAU,WACRnB,GAAwB,IArB5B,SAwBE,cAAC,IAAD,CACEoB,KAAK,QACLF,QAAM,EACNvD,QAAS,WACPqC,GAAwB,IAJ5B,2DCwFSqB,EA/GI,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,OAAQL,EAAgD,EAAhDA,QAAgD,IAAvCM,oBAAuC,SAAlBC,EAAkB,EAAlBA,YAC1D,EAAexF,IAART,EAAP,oBACM8B,EAAUC,cAaVmE,EAAO,CACX,CACEtB,MAAO,sEACPuB,UAAW,MAEb,CACEvB,MAAO,8FACPuB,UAAW,YACXC,OAAQ,SAAAC,GAAS,OACfC,IAAOD,GAAWE,OAAO,wBAG7B,CACE3B,MAAO,kFACPuB,UAAW,WACXC,OAAQ,SAAAI,GAAQ,OACdA,KAAcA,EAASC,QAAUD,EAASE,KAAI,SAAAC,GAAO,OACnD,eAAC,WAAD,qBACMA,EAAQ7G,KADd,aACuB6G,EAAQC,KAD/B,cACyCD,EAAQE,cAAcC,SAASC,QAAQ,QAAS,IADzF,KAEE,yBAFaJ,EAAQ3D,SAO7B,CACE4B,MAAO,8CACPuB,UAAW,WACXC,OAAQ,SAACI,EAAUQ,GACjB,IAAMC,EAASD,EAAOE,cAAgBV,GAAY,IAAIW,QAAO,SAACC,GAA0B,IAAlBT,EAAiB,uDAAP,GAC9E,OAAOS,GAAWT,EAAQE,cAAcC,SAAWH,EAAQU,OAAU,KACpE,GACH,OACEb,KAAcA,EAASC,QAAvB,UAAoCa,OAAOL,GAAQF,QAAQ,QAAS,IAApE,WAhCK,mBAoCPf,EAAe,CAAC,CAClBpB,MAAO,mDACPuB,UAAW,WACXC,OAAQ,SAAAmB,GAAQ,OACd,eAAC,IAAD,CAAMC,GAAE,qBAAgBD,EAASvE,IAAjC,UACGuE,EAASzH,KADZ,QACuByH,EAASE,kBAE/B,IA3CM,CA4CX,CACE7C,MAAO,uCACPuB,UAAW,cACXC,OAAQ,SAAArC,GAAM,OACZ,cAAC,EAAD,CAAWf,GAAIe,EAAOf,GAAIlD,KAAMiE,EAAOjE,SAG3C,CACE8E,MAAO,iFACPuB,UAAW,OACXC,OAAQ,SAAApG,GAAI,OACVA,GAAI,UAAOA,EAAK0H,UAAY,IAAxB,OAA6B1H,EAAK0H,UAAY1H,EAAK2H,SAAW,KAAO,IAArE,OAA0E3H,EAAK2H,YAGvF,CACE/C,MAAO,GACPgD,IAAK,SACLxB,OAAQ,SAACyB,EAAMb,GAAP,OACN,eAAC,IAAD,CAAOnB,KAAK,SAAZ,UACE,cAAC,EAAD,CACEzB,IAAG,kBAAa4C,EAAOhE,IACvBmB,UAAW8B,EACX5B,eAAe,oIACfC,aAAa,sIAEf,cAAC,IAAD,CAAMkD,GAAE,kBAAaR,EAAOhE,GAApB,SAAR,SAAuC,cAAC,IAAD,CACrCf,KAAK,UAAU6F,OAAK,EACpBjC,KAAK,QAFgC,8FAGvC,cAAC,IAAD,CAAM2B,GAAE,kBAAaR,EAAOhE,IAA5B,SAAkC,cAAC,IAAD,CAChC6C,KAAK,QAD2B,oDAER,IAAzBmB,EAAOe,gBAAwBf,EAAOgB,QACvC,cAAC,IAAD,CACEnC,KAAK,QACL5D,KAAK,UACLG,QAAS,WAzFD,IAACY,IA0FGgE,EAAOhE,GAzF3BE,EAAQ+E,IAAR,kBAAuBjF,GAAM,CAAE+E,cAAe,EAAGC,OAAQhI,EAAKgD,KAC3DiC,MAAK,WACJjB,IAAakB,QAAQ,CAAEjB,QAAS,4IAChCnC,EAAQQ,KAAR,kBAAwBU,OAEzBmC,OAAM,WACLnB,IAAaL,MAAM,CAAEM,QAAS,0IA+E5B,+DAeR,OACE,cAAC,IAAD,CAAOiC,QAASA,EAASgC,WAAYnC,EAAQoC,OAAO,KAAKzC,QAASA,EAAS0C,YAAY,KC/G9EC,EAAkB,SAAC9G,GAC9BN,aAAaQ,QAAQ,eAAgBV,KAAKW,UAAUH,KC+IvC+G,EA7IA,WACb,MAA8B/D,oBAAS,GAAvC,mBAAOmB,EAAP,KAAgB6C,EAAhB,KACA,EAA2BhE,mBAAS,IAApC,mBAAOwB,EAAP,KAAeyC,EAAf,KACA,EAA4BjE,mBDXC,WAC7B,IAAMkE,EAAQxH,aAAaC,QAAQ,gBACnC,OAAOuH,EAAQ1H,KAAKC,MAAMyH,GAAS,CAAEC,KAAM,EAAG7C,KAAM,GAAI8C,OAAQ,GAAIC,MAAO,2BCStCC,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEA,EAAgCxE,mBAAS,IAAzC,mBAAOyE,EAAP,KAAiBC,EAAjB,KACA,EAA8C1E,oBAAS,GAAvD,mBAAO2E,EAAP,KAAwBC,EAAxB,KACA,EAA0B5E,mBAAS,IAAnC,mBAAO6E,EAAP,KAAcC,EAAd,KACA,EAAwC9E,oBAAS,GAAjD,mBAAO+E,EAAP,KAAqBC,EAArB,KAEMC,EAAe,SAACjI,GACpB8G,EAAgB,2BAAKS,GAAWvH,IAChCwH,GAAU,SAAAU,GAAU,kCAAUA,GAAelI,OAGzCmI,EAAeC,aAAS,SAACpI,GAC7B8G,EAAgB,2BAAKS,GAAN,IAAcJ,KAAM,EAAG7C,KAAM,GAAI8C,OAAO,2BAAMG,EAAOH,QAAWpH,MAC/EwH,GAAU,SAAAU,GAAU,kCAAUA,GAAV,IAAsBf,KAAM,EAAG7C,KAAM,GAAI8C,OAAO,2BAAMc,EAAWd,QAAWpH,UAC/F,KAEG0E,EAAc3E,uBAAY,WAC9BiH,GAAW,GACXrF,EAAQ0G,IAAI,UAAW,CAAEd,WAAU7D,MAAK,SAAA4E,GACtCrB,EAASqB,EAAItI,SACZ4D,OAAM,SAAC2E,GACR9F,IAAaL,MAAM,CAAEM,QAAS,2JAC7BqB,SAAQ,WACTiD,GAAW,QAEZ,CAACA,EAAYC,EAAUM,IAoC1B,OAlCAiB,qBAAU,WACR9D,MACC,CAACA,IAEJ8D,qBAAU,WACR,IAAMC,EAAWC,aAAY,WAC3BhE,MACC,KAEH,OAAO,WACLiE,cAAcF,MAEf,CAAC/D,IAEJ8D,qBAAU,WACRZ,GAAmB,GACnBjG,EAAQ0G,IAAI,mBAAmB3E,MAAK,SAAA4E,GAClCZ,EAAYY,EAAItI,SACf4D,OAAM,WACPnB,IAAaL,MAAM,CAAEM,QAAS,iKAC7BqB,SAAQ,WACT6D,GAAmB,MAGrBI,GAAgB,GAChBrG,EAAQ0G,IAAI,UAAU3E,MAAK,SAAA4E,GACzBR,EAASQ,EAAItI,SACZ4D,OAAM,WACPnB,IAAaL,MAAM,CAAEM,QAAS,2JAC7BqB,SAAQ,WACTiE,GAAgB,QAEjB,IAGD,qCACE,qBAAKvH,UAAU,iBAAf,SACE,cAAC,IAAD,CAAMwF,GAAG,cAAT,SACE,cAAC,IAAD,CAAQxF,UAAU,eAAeC,KAAK,UAAtC,4DAGJ,sBAAKD,UAAU,gBAAf,gFAEE,eAAC,IAAD,CACEmI,MAAO,CAAEC,MAAO,KAChBC,YAAU,EACV3E,QAAS4D,EACTb,MAAOK,EAAOF,MACd0B,SAAU,SAAA7B,GAAK,OAAIe,EAAa,CAAEZ,MAAOH,KACzC8B,aAAc,0BANhB,UAQE,cAAC,IAAOC,OAAR,CAAe/B,MAAO,0BAAtB,+HACA,cAAC,IAAO+B,OAAR,CAAe/B,MAAO,yBAAtB,wIACQ,IACV,cAAC,IAAD,CACEgC,YAAY,uCACZN,MAAO,CAAEC,MAAO,KAChBC,YAAU,EACV3E,QAASwD,EACTT,MAAOK,EAAOH,OAAOZ,cACrBuC,SAAU,SAAA7B,GAAK,OAAIiB,EAAa,CAAE3B,cAAeU,KANnD,SAQGO,EAAStC,KAAI,SAAA3C,GAAM,OAClB,cAAC,IAAOyG,OAAR,CAA+B/B,MAAO1E,EAAOf,GAA7C,SAAkDe,EAAOjE,MAArCiE,EAAOf,SAErB,IACV,eAAC,IAAD,CACEyH,YAAY,iFACZN,MAAO,CAAEC,MAAO,KAChBC,YAAU,EACV5B,MAAOK,EAAOH,OAAOX,OACrBtC,QAAS4D,EACTgB,SAAU,SAAA7B,GAAK,OAAIiB,EAAa,CAAE1B,OAAQS,KAN5C,UAQGW,EAAM1C,KAAI,SAAA1G,GAAI,OACb,eAAC,IAAOwK,OAAR,CAEE/B,MAAOzI,EAAKgD,GAFd,UAEmBhD,EAAK0H,SAFxB,IAEmC1H,EAAK0H,UAAY1H,EAAK2H,SAAW,IAAM,KAF1E,IAEiF3H,EAAK2H,WAD/E3H,EAAKgD,OAId,cAAC,IAAOwH,OAAR,CAAe/B,MAAO,KAAtB,+CACQ,IACV,cAAC,IAAD,CACE0B,MAAO,CAAEC,MAAO,KAChBE,SAAU,SAAAR,GAAC,OAAIJ,EAAa,CAAE1G,GAAI8G,EAAEY,OAAOjC,YAASkC,KACpDF,YAAY,0HAEd,cAAC,IAAD,CACErI,QAAS,WACPoH,EAAa,CAAEd,KAAM,EAAG7C,KAAM,GAAI8C,OAAQ,GAAIC,MAAO,6BAFzD,4GAMF,cAAC,EAAD,CAAY7C,OAAQA,EAAOxE,KAAMmE,QAASA,EAASO,YAAaA,IAChE,qBAAKjE,UAAU,aAAf,SACE,cAAC,IAAD,CACE4I,iBAAiB,EACjBC,MAAO9E,EAAO+E,WACdC,QAASjC,EAAOJ,KAChBsC,gBAAiBlC,EAAOjD,KACxByE,SAAU,SAAA5B,GACRc,EAAa,CAAEd,kBC5IduC,I,QAAa,CACxBC,MAAO,iFACPC,QAAS,qDCqFIC,GA7ED,WACZ,MAA8B7G,oBAAS,GAAvC,mBAAOmB,EAAP,KAAgB6C,EAAhB,KACA,EAA0BhE,mBAAS,IAAnC,mBAAO6E,EAAP,KAAcC,EAAd,KACMrJ,EAAOa,YAAYN,GAEnB8K,EAAa/J,uBAAY,WAC7BiH,GAAW,GACXrF,EAAQ0G,IAAI,UAAU3E,MAAK,SAAA4E,GACzBR,EAASQ,EAAItI,SACZ4D,OAAM,SAAAC,OACNE,SAAQ,WACTiD,GAAW,QAEZ,CAACA,EAAYc,IAEVnD,EAAUpF,mBAAQ,iBAAM,CAC5B,CACE8D,MAAO,8FACPuB,UAAW,WACXyB,IAAK,YAEP,CACEhD,MAAO,qBACPuB,UAAW,WACXyB,IAAK,YAEP,CACEhD,MAAO,QACPuB,UAAW,QACXyB,IAAK,SAEP,CACEhD,MAAO,2BACPuB,UAAW,CAAC,OAAQ,QACpByB,IAAK,OACLxB,OAAQ,SAAAhF,GAAI,OACV,cAAC,IAAD,CAAK6B,MAAgB,UAAT7B,EAAmB,WAAa,QAA5C,SACG6J,GAAW7J,OAIlB,CACEwD,MAAO,GACPgD,IAAK,SACLxB,OAAQ,SAACyB,EAAMb,GAAP,OACN,eAAC,IAAD,CAAOnB,KAAK,SAAZ,UACE,cAAC,IAAD,CAAM2B,GAAIR,EAAOhE,KAAOhD,EAAKgD,GAAK,WAAxB,iBAA+CgE,EAAOhE,IAAhE,SAAsE,cAAC,IAAD,CACpE6C,KAAK,QAD+D,8FAErEmB,EAAOhE,KAAOhD,EAAKgD,IAClB,cAAC,EAAD,CACEoB,IAAG,iBAAY4C,EAAOhE,IACtBmB,UAAWkH,EACXhH,eAAc,mFAAkB2C,EAAOW,SAAzB,uGACdrD,aAAc,wLAMvB,CAACtE,EAAMqL,IAMV,OAJAtB,qBAAU,WACRsB,MACC,CAACA,IAGF,qCACE,qBAAKrJ,UAAU,iBAAf,SACE,cAAC,IAAD,CAAMwF,GAAG,aAAT,SACE,cAAC,IAAD,CAAQxF,UAAU,eAAeC,KAAK,UAAtC,kEAGJ,cAAC,IAAD,CAAOiE,QAASA,EAASgC,WAAYkB,EAAOjB,OAAO,KAAKzC,QAASA,EAAS0C,YAAY,Q,gCCrEpFoC,GAAWc,IAAXd,OAEFe,GAAiB,CACrBC,SAAU,CACRC,GAAI,CACFC,KAAM,IAERC,GAAI,CACFD,KAAM,IAGVE,WAAY,CACVH,GAAI,CACFC,KAAM,IAERC,GAAI,CACFD,KAAM,KAING,GAAqB,CACzBD,WAAY,CACVH,GAAI,CACFC,KAAM,GACNI,OAAQ,GAEVH,GAAI,CACFD,KAAM,GACNI,OAAQ,KA+LCC,GA1LE,SAAC,GAA8B,IAAD,IAA3B/L,YAA2B,MAApB,GAAoB,EAAhBmE,EAAgB,EAAhBA,UAC7B,EAAe6H,KAAKC,UAAbC,EAAP,oBACA,EAAsBzL,IAAXU,EAAX,oBACA,EAA8BoD,oBAAS,GAAvC,mBAAOmB,EAAP,KAAgB6C,EAAhB,KAEA,EAAoDhE,oBAAS,GAA7D,mBAAO4H,EAAP,KAA2BC,EAA3B,KAEMC,IAAYrM,EAAKgD,GAyCvB,OACE,mCACE,eAAC,KAAD,2BACMuI,IADN,IAEEW,KAAMA,EACNpM,KAAK,OACLwM,SA7CW,SAACC,GAChBhE,GAAW,GACX,IAAMiE,EAAW,CACf7E,SAAU4E,EAAO5E,SACjB8E,MAAOF,EAAOE,MACd/E,SAAU6E,EAAO7E,UAGf2E,GAAUF,IACZK,EAASE,SAAWH,EAAOG,UAGzBH,EAAOI,SACTH,EAASG,OAASC,OAAOL,EAAOI,UAGjCN,EAASnJ,EAAQ+E,IAAR,iBAAsBjI,EAAKgD,IAAMwJ,GAAYtJ,EAAQ2J,KAAK,eAAb,2BAClDL,GADkD,IAErDE,SAAUH,EAAOG,aAEhBzH,MACC,SAACnB,GACCE,IAAakB,QAAQ,CACnBjB,QAASoI,EAAM,wHACUvI,EAASvC,KAAKoG,SADxB,qRAEe7D,EAASvC,KAAKoG,SAF7B,sFAIbxD,GACFA,EAAUL,EAASvC,SAGvB,WACEyC,IAAaL,MAAM,CAAEM,QAAS,8NAEhCqB,SAAQ,WACViD,GAAW,OAWTuE,cAAeT,EAAM,2BAChBrM,GADgB,IAEnB2M,OAAQrF,OAAOtH,EAAKoB,KAAK4B,MACvB,CAAE2J,OAAQ,KACdI,oBAAkB,EATpB,UAWE,cAAC,KAAKC,KAAN,CACElN,KAAK,WACLmN,MACE,sEAEE,cAAC,KAAD,CAASrI,MAAM,sJAAf,SACA,cAACsI,GAAA,EAAD,SAIJC,MAAO,CACL,CACEC,UAAU,EACVnJ,QAAS,4EACToJ,YAAY,IAdlB,SAkBE,cAAC,IAAD,MAEF,cAAC,KAAKL,KAAN,CACElN,KAAK,QACLmN,MAAM,SACNE,MAAO,CACL,CACElL,KAAM,QACNgC,QAAS,mFAEX,CACEmJ,UAAU,EACVnJ,QAAS,gDAVf,SAcE,cAAC,IAAD,MAEF,cAAC,KAAK+I,KAAN,CACElN,KAAK,WACLmN,MAAM,qBACNE,MAAO,CACL,CACEC,UAAU,EACVnJ,QAAS,gEACToJ,YAAY,IAPlB,SAWE,cAAC,IAAD,MAEDlM,GACD,cAAC,KAAK6L,KAAN,CACElN,KAAK,SACLmN,MAAM,2BACNE,MAAO,CACL,CACEC,UAAU,EACVnJ,QAAS,+EANf,SAUE,eAAC,IAAD,WACE,cAACuG,GAAD,CAAQ/B,MAAM,IAAd,4FACA,cAAC+B,GAAD,CAAQ/B,MAAM,IAAd,mEAIH4D,GACD,cAAC,KAAKW,KAAN,2BAAenB,IAAf,aACE,cAAC,IAAD,CAAQzJ,QAAS,WACfgK,GAAsB,SAAAkB,GAAG,OAAKA,MADhC,SAGGnB,EAAqB,uCAAW,yFAIlCE,GAAUF,IACb,qCACE,cAAC,KAAKa,KAAN,CACElN,KAAK,WACLmN,MAAM,sEACNE,MAAO,CACL,CACEC,UAAU,EACVnJ,QAAS,oFAGbsJ,aAAW,EATb,SAWE,cAAC,IAAMC,SAAP,CAAgBC,aAAa,mBAE/B,cAAC,KAAKT,KAAN,CACElN,KAAK,UACLmN,MAAM,sHACNS,aAAc,CAAC,YACfH,aAAW,EACXJ,MAAO,CACL,CACEC,UAAU,EACVnJ,QAAS,2GAEX,gBAAG0J,EAAH,EAAGA,cAAH,MAAwB,CACtBC,UADsB,SACZC,EAAMpF,GACd,OAAKA,GAASkF,EAAc,cAAgBlF,EAIrC7E,QAAQC,OAAO,oIAHbD,QAAQkK,cAbzB,SAqBE,cAAC,IAAMN,SAAP,SAIJ,cAAC,KAAKR,KAAN,2BAAenB,IAAf,aACE,cAAC,IAAD,CAAQ5J,KAAK,UAAU8L,SAAS,SAASrI,QAASA,EAAlD,SACG2G,EAAS,yDAAc,yDC/MrB2B,GAbC,WACd,MAA2BvN,IAA3B,mBAAOT,EAAP,KAAaqB,EAAb,KAEA,OACE,cAAC,GAAD,CACErB,KAAMA,EACNmE,UAAW,SAAA0F,GACTxI,EAAWwI,O,UCDJoE,I,QANC,SAACC,GAAD,OACd,qBAAKlM,UAAU,UAAf,SACE,cAAC,KAAD,eAAUkM,QCwBCC,GAxBE,WACf,MAAwB5J,qBAAxB,mBAAOvE,EAAP,KAAaE,EAAb,KACQ8C,EAAOoL,cAAPpL,GACFlB,EAAUC,cAUhB,OARAgI,qBAAU,WACR7G,EAAQ0G,IAAR,iBAAsB5G,IAAMiC,MAAK,SAAA4E,GAC/B3J,EAAQ2J,EAAItI,SACX4D,OAAM,SAAAC,GACPC,QAAQgJ,IAAIjJ,QAEb,CAAClF,EAAS8C,IAGXhD,EACE,cAAC,GAAD,CACEA,KAAMA,EACNmE,UAAW,WACTrC,EAAQQ,KAAK,aAEZ,cAAC,GAAD,CAASuD,KAAK,WCVVyI,GAZI,WACjB,IAAMxM,EAAUC,cAEhB,OACE,cAAC,GAAD,CACEoC,UAAW,WACTrC,EAAQQ,KAAK,c,gECVRiJ,GAAiB,CAC5BC,SAAU,CACRC,GAAI,CACFC,KAAM,IAERC,GAAI,CACFD,KAAM,IAGVE,WAAY,CACVH,GAAI,CACFC,KAAM,IAERC,GAAI,CACFD,KAAM,KAICG,GAAqB,CAChCD,WAAY,CACVH,GAAI,CACFC,KAAM,GACNI,OAAQ,GAEVH,GAAI,CACFD,KAAM,GACNI,OAAQ,K,gCCbCyC,GAXY,SAACC,EAAIC,GAC9B,IAAMC,EAAcC,kBAAO,GAE3B5E,qBAAU,WACJ2E,EAAY3D,QACdyD,IAEAE,EAAY3D,SAAU,IACvB0D,IC8CUG,I,OAtCC,SAAC,GAAsD,IAAD,IAAnDnG,MAAOoG,OAA4C,MAAhC,KAAgC,EAA1BvE,EAA0B,EAA1BA,SAAUwE,EAAgB,EAAhBA,UAC9CrG,GAA8B,kBAAdoG,EAAyB9N,KAAKC,MAAM6N,GAAaA,IAAc,GAE/EE,EAAe,CAAEnK,MAAO,oLAAoC2H,OAAQ,CAAC,IAM3E,OAJAgC,IAAmB,WACjBjE,EAAS,QACR,CAACwE,IAGF,qCACE,qBAAK9M,UAAU,gBAAf,SAAgC+M,EAAanK,QAC7C,qBAAK5C,UAAU,kBAAf,SACG+M,EAAaxC,OAAO7F,KAAI,SAAAsI,GAAO,OAC9B,qBAAmBhN,UAAU,wBAA7B,SACE,sBAAKA,UAAU,gBAAf,UACE,cAACiN,GAAA,EAAD,CAAe9E,MAAO,CAAE+E,SAAU,IAAM9M,QAAS,WAC/CkI,EAASvJ,KAAKW,UAAL,2BAAoB+G,GAApB,mBAA4BuG,GAAWvG,EAAMuG,IAAY,GAAK,SAEzE,cAAC,KAAD,CACEG,UAAU,EACV7E,SAAU,SAACgD,GACThD,EAASvJ,KAAKW,UAAL,2BAAoB+G,GAApB,mBAA4BuG,EAAU1B,OAEjD7E,MAAOA,EAAMuG,IAAY,EACzBI,IAAK,IAEP,cAACC,GAAA,EAAD,CAAclF,MAAO,CAAE+E,SAAU,IAAM9M,QAAS,WAC9CkI,EAASvJ,KAAKW,UAAL,2BAAoB+G,GAApB,mBAA4BuG,GAAWvG,EAAMuG,IAAY,GAAK,aAdnEA,aCVLM,GAlBE,SAAC,GAAoD,IAAlD7G,EAAiD,EAAjDA,MAAO6B,EAA0C,EAA1CA,SAAU4B,EAAgC,EAAhCA,KAAMqD,EAA0B,EAA1BA,UAAW/I,EAAe,EAAfA,SAC9CwI,EAAU9C,EAAKyB,cAAc,CAAC,WAAY4B,EAAW,YACrDvM,EAAKkJ,EAAKyB,cAAc,CAAC,WAAY4B,EAAW,OAEhDC,GADUhJ,EAASiJ,MAAM,SAAAC,GAAE,OAAIA,EAAG1M,KAAOA,MAAQ,IAC3BqE,MAAQoB,GAAU,EAM9C,OAJAsB,qBAAU,WACRO,EZFkC,SAAC0E,GACrC,GAAKA,EAAL,CACA,IAAMvG,EAA2B,kBAAZuG,EAAuBjO,KAAKC,MAAMgO,GAAWA,EAClE,OAAOW,OAAOC,KAAKnH,GAAOtB,QAAO,SAAC0I,EAAKjI,GACrC,OAAOiI,EAAMpH,EAAMb,GAAOgF,OAAOhF,KAChC,IYHQkI,CAAuBd,MAC/B,CAACA,IAGF,qBAAKhN,UAAU,mBAAf,SAEE,8BAAMwN,EAAU,UAAMA,EAAN,QAAyB,UCJvChF,GAAWc,IAAXd,OAyGOuF,GAvGG,SAAC,GAAyC,IAAvC7D,EAAsC,EAAtCA,KAAM1F,EAAgC,EAAhCA,SAAUwJ,EAAsB,EAAtBA,gBACnC,OACE,cAAC,KAAKC,KAAN,CAAWnQ,KAAK,WAAhB,SACG,SAACoQ,EAAD,GAA8B,IAAnBC,EAAkB,EAAlBA,IAAKC,EAAa,EAAbA,OACf,OACE,qCACGF,EAAOxJ,KAAI,SAAA2J,GACV,OACE,sBAAKrO,UAAU,eAAf,UACE,eAAC,KAAD,CAAKsO,OAAQ,GAAIC,MAAM,SAAvB,UACE,cAAC,KAAD,CAAK9E,GAAI,GAAT,SACE,cAAC,KAAKuB,KAAN,CACEwD,SAAO,EACPC,cAAY,EAFd,SAIG,WACC,IACMC,GADSxE,EAAKyB,cAAc,aAAe,IACtBhF,QAAO,SAAA2E,GAAG,OAAIA,GAAOA,EAAItK,MAAI0D,KAAI,SAAA4G,GAAG,OAAIA,EAAItK,MACjE8L,EAAY5C,EAAKyB,cAAc,CAAC,WAAY0C,EAAMzI,IAAK,OACvDjB,EAAUH,EAASiJ,MAAK,SAAAC,GAAE,OAAIA,EAAG1M,KAAO8L,KAC9C,OACE,qCACE,cAAC,KAAK9B,KAAN,2BACMqD,GADN,IAEEpD,MAAM,iCACNnN,KAAM,CAACuQ,EAAMvQ,KAAM,MACnB6Q,SAAU,CAACN,EAAMM,SAAU,MAC3BxD,MAAO,CAAC,CAAEC,UAAU,EAAMnJ,QAAS,oFALrC,SAOE,cAAC,IAAD,CAAQ2M,SAAUZ,EAAlB,SACGxJ,EAASE,KAAI,SAAAmK,GAAI,OAChB,cAAC,GAAD,CAAQD,SAAUF,EAAYI,SAASD,EAAK7N,IAAmByF,MAAOoI,EAAK7N,GAA3E,mBACM6N,EAAK/Q,KADX,aACoB+Q,EAAKxJ,MADzB,6BACyCwJ,EAAKjK,KAD9C,MAAsDiK,EAAK7N,YAMhE2D,GAAWA,EAAQoK,aAAe,mBAAG5G,MAAO,CAAElH,MAAO,QAAnB,SAA8B0D,EAAQoK,sBAMnF,cAAC,KAAD,CAAKtF,GAAI,EAAT,SACE,eAAC,IAAD,CAAQxJ,KAAK,OAAO0D,QAAM,EAACvD,QAAS,kBAAMgO,EAAOC,EAAMvQ,OAAvD,UACE,cAACkR,GAAA,EAAD,CAAeC,aAAa,QAD9B,qDAMJ,cAAC,KAAKjE,KAAN,CACEwD,SAAO,EACPC,cAAY,EAFd,SAIG,WACC,IAAM3B,EAAY5C,EAAKyB,cAAc,CAAC,WAAY0C,EAAMzI,IAAK,OAC7D,OAAOkH,EACL,cAAC,KAAD,UACE,cAAC,KAAK9B,KAAN,2BACMqD,GADN,IAEEvQ,KAAM,CAACuQ,EAAMvQ,KAAM,WACnB6Q,SAAU,CAACN,EAAMM,SAAU,WAC3B1D,MAAM,6CACNuD,SAAO,EALT,SAOE,cAAC,GAAD,CAAS1B,UAAWA,SAEd,QAGhB,cAAC,KAAD,UACE,cAAC,KAAK9B,KAAN,CAAWyD,cAAY,EAAvB,SACG,WACC,OACE,cAAC,KAAKzD,KAAN,2BACMqD,GADN,IAEEvQ,KAAM,CAACuQ,EAAMvQ,KAAM,YACnB6Q,SAAU,CAACN,EAAMM,SAAU,YAC3BH,SAAO,EAJT,SAME,cAAC,GAAD,CAAUtE,KAAMA,EAAMqD,UAAWc,EAAMvQ,KAAM0G,SAAUA,cAxEhC6J,EAAMzI,QAkF7C,cAAC,KAAKoF,KAAN,2BAAenB,IAAf,aACE,cAAC,IAAD,CAAQ5J,KAAK,SAASG,QAAS,kBAAM+N,KAAOjO,KAAM,cAACmN,GAAA,EAAD,IAAlD,uGCkCC6B,GAtIQ,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACxB,OACE,qCACE,cAAC,KAAKnE,KAAN,CACElN,KAAM,CAAC,WAAY,QACnBmN,MAAM,qBACNE,MAAO,CACL,CACEC,UAAU,EACVnJ,QAAS,kEANf,SAUE,cAAC,IAAD,MAEF,cAAC,KAAK+I,KAAN,CACElN,KAAM,CAAC,WAAY,eACnBmN,MAAM,uJACNE,MAAO,CAAC,aAEJC,UAAU,EACVnJ,QAAS,sPACLkN,EAAgB,CAAEC,IAAK,GAAM,KAGrCC,UAAW,SAAC/D,GACV,OAAOA,EAAIvG,QAAQ,MAAM,KAX7B,SAcE,cAAC,IAAD,CACEuK,YAAY,OACZnH,MAAO,CACLC,MAAO,YAIb,cAAC,KAAK4C,KAAN,CACElN,KAAM,CAAC,WAAY,SACnBmN,MAAM,QACNE,MAAO,CACL,CACElL,KAAM,QACNgC,QAAS,mFAEX,CACEmJ,UAAU,EACVnJ,QAAS,8CACToJ,YAAY,IAXlB,SAeE,cAAC,IAAD,U,WCZOkE,GAvCQ,SAAC,GAAc,IAAZrF,EAAW,EAAXA,KAClBsF,EAAgBtF,EAAKyB,cAAc,aAAe,GAClD8D,EAAmBvF,EAAKyB,cAAc,oBAItC+D,EAHgBF,EAAcrK,QAAO,SAACC,GAAsB,IAAdkG,EAAa,uDAAP,GACxD,OAAOlG,GAAUkG,EAAIxG,UAAY,KAChC,IAC8C,GAQjD,OANAiD,qBAAU,WACiB,IAArB0H,GAA2BC,GAC7BxF,EAAKyF,eAAe,CAAEF,iBAAkB,MAEzC,CAACA,EAAkBC,IAGpB,cAAC,KAAK1E,KAAN,CACElN,KAAK,mBACLmN,MAAM,wFACNE,MAAO,CACL,CACEC,UAAU,EACVnJ,QAAS,qIANf,SAUE,eAAC,IAAD,WACE,cAAC,IAAOuG,OAAR,CAAe/B,MAAO,EAAtB,iMAEA,eAAC,IAAO+B,OAAR,CACEoG,UAAWc,EACXjJ,MAAO,EAFT,2LAIqCiJ,GAA2B,mJCmDzDE,GA/EK,SAAC,GAAc,IAAZ1F,EAAW,EAAXA,KACrB,OACE,qCACE,cAAC,KAAKc,KAAN,CACEwD,SAAO,EACPC,cAAY,EAFd,SAIG,WACC,OACE,cAAC,GAAD,CACEvE,KAAMA,OAKd,cAAC,KAAKc,KAAN,CAAWU,aAAc,CAAC,oBAAqB8C,SAAO,EAAtD,SACG,WACC,IAAMiB,EAAmBvF,EAAKyB,cAAc,oBAC5C,OAA6B,IAArB8D,GAA+C,IAArBA,IAChC,cAAC,KAAKzE,KAAN,CACElN,KAAK,kBACLmN,MAAM,kFACNE,MAAO,CACL,CACEC,UAAU,EACVnJ,QAAS,4EACToJ,YAAY,IAPlB,SAWE,cAAC,IAAD,SAIR,cAAC,KAAKL,KAAN,CACElN,KAAK,eACLmN,MAAM,4EACNE,MAAO,CACL,CACEC,UAAU,EACVnJ,QAAS,yHANf,SAUE,cAAC,KAAD,CACEsC,OAAO,aACPsL,aAAc,SAAC9G,GACb,QAAIA,MACEA,EAAQ+G,SAASxL,IAAO,iBAGxByE,EAAQgH,OAAO,IAAIC,KAAQ,QAGxBjH,EAAUzE,MAAS2L,MAAM,aAMxC,cAAC,KAAKjF,KAAN,CACElN,KAAK,gBACLmN,MAAM,4EACNE,MAAO,CACL,CACEC,UAAU,EACVnJ,QAAS,yHANf,SAUE,eAAC,KAAMiO,MAAP,WACE,cAAC,KAAD,CAAOzJ,MAAM,mDAAb,8DACA,cAAC,KAAD,CAAOA,MAAM,iCAAb,qDC7DF+B,GAAWc,IAAXd,OAEFqB,GAAqB,CACzBD,WAAY,CACVH,GAAI,CACFC,KAAM,GACNI,OAAQ,GAEVH,GAAI,CACFD,KAAM,GACNI,OAAQ,KA6RCiE,GAxRG,SAAC,GAA+B,IAAD,IAA5BnH,aAA4B,MAApB,GAAoB,EAAhBzE,EAAgB,EAAhBA,UAC/B,EAAe6H,KAAKC,UAAbC,EAAP,oBACA,EAAkC3H,mBAAS,CAAEhD,KAAM,KAAnD,mBAAO4Q,EAAP,KAAkBC,EAAlB,KACA,EAAgD7N,oBAAS,GAAzD,mBAAO8N,EAAP,KAAyBC,EAAzB,KACA,EAAgC/N,mBAAS,IAAzC,mBAAOyE,EAAP,KAAiBC,EAAjB,KACA,EAA8C1E,oBAAS,GAAvD,mBAAO2E,EAAP,KAAwBC,EAAxB,KACA,EAA0B5E,mBAAS,IAAnC,mBAAO6E,EAAP,KAAcC,EAAd,KACA,EAAwC9E,oBAAS,GAAjD,mBAAO+E,EAAP,KAAqBC,EAArB,KACA,EAA8BhF,oBAAS,GAAvC,mBAAOmB,EAAP,KAAgB6C,EAAhB,KACA,EAA0ChE,mBAAS,GAAnD,mBAAOgO,EAAP,KAAsBC,EAAtB,KACA,EAAe/R,IAART,EAAP,oBAEMqM,IAAYzD,EAAM5F,GAExB,EAAgCuB,mBAAS,IAAzC,oBAAOiC,GAAP,MAAiBiM,GAAjB,MACA,GAA8ClO,oBAAS,GAAvD,qBAAOyL,GAAP,MAAwB0C,GAAxB,MAEA3I,qBAAU,WACR2I,IAAmB,GACnBxP,EAAQ0G,IAAI,aAAa3E,MAAK,SAAA4E,GAC5B4I,GAAY5I,EAAItI,SACf4D,OAAM,WACPnB,IAAaL,MAAM,CAAEM,QAAS,uKAC7BqB,SAAQ,WACToN,IAAmB,QAEpB,CAACD,GAAaC,KAEjB,IAAMC,GAAiB,WAAsB,IAArBC,EAAoB,uDAAP,GACnCN,GAAoB,GACpBpP,EAAQ0G,IAAI,aAAc,CAAEd,OAAQ,CAAEJ,KAAM,EAAG7C,KAAM,GAAIgN,OAAQD,KAAgB3N,MAAK,SAAA4E,GACpFuI,EAAavI,EAAItI,SAChB4D,OAAM,WACPnB,IAAaL,MAAM,CAAEM,QAAS,mLAC7BqB,SAAQ,WACTgN,GAAoB,OAIxBvI,qBAAU,WACJsC,GACFH,EAAK4G,gBAEN,CAAC5G,EAAMG,EAAQzD,IAElBmB,qBAAU,WACR4I,KAEAxJ,GAAmB,GACnBjG,EAAQ0G,IAAI,mBAAmB3E,MAAK,SAAA4E,GAClCZ,EAAYY,EAAItI,SACf4D,OAAM,WACPnB,IAAaL,MAAM,CAAEM,QAAS,iKAC7BqB,SAAQ,WACT6D,GAAmB,MAGrBI,GAAgB,GAChBrG,EAAQ0G,IAAI,UAAU3E,MAAK,SAAA4E,GACzBR,EAASQ,EAAItI,SACZ4D,OAAM,WACPnB,IAAaL,MAAM,CAAEM,QAAS,2JAC7BqB,SAAQ,WACTiE,GAAgB,QAEjB,CAAC6I,EAAcE,IAElB,IAIMS,IAAmBnK,EAAMpC,UAAY,IAAIE,KAAI,SAAAC,GAAO,MAAK,CAC7D3D,GAAI2D,EAAQ3D,GACZ8D,SAAUH,EAAQE,cAAcC,SAChCkI,QAASrI,EAAQE,cAAcmI,YAiDjC,OACE,qCACG3C,GAAU,qBAAKrK,UAAU,iBAAf,SAAgC,cAAC,IAAD,CAAMwF,GAAE,kBAAaoB,EAAM5F,IAA3B,SAAiC,cAAC,IAAD,CAC1Ef,KAAK,UADqE,kEAE5E,eAAC,KAAD,CACE+Q,OAAO,WACP9G,KAAMA,EACNpM,KAAK,QACLwM,SAtDW,SAACC,GAChB,IAAM0G,EAAS,GAEf,GAAI5G,EAAQ,CACV,IAAM6G,EAAc3G,EAAO/F,SAASE,KAAI,SAAAgJ,GAAE,OAAIA,EAAG1M,MAC3CmQ,EAAkBJ,GAAgB5L,QAAO,SAACC,EAAQT,GAItD,OAHKuM,EAAYpC,SAASnK,EAAQ3D,KAChCoE,EAAO9E,KAAP,2BAAiBqE,GAAjB,IAA0ByM,UAAU,KAE/BhM,IACN,IACHmF,EAAO/F,SAAW+F,EAAO/F,SAAS6M,OAAOF,GAGtC9G,GAAYE,EAAO/F,UAAa+F,EAAO/F,SAASC,OAE1C8F,EAAO/F,SAAS8M,MAAK,SAAA3M,GAAO,OAAKA,EAAQG,aAClDmM,EAAO3Q,KAAK,6JAFZ2Q,EAAO3Q,KAAK,gGAKV2Q,EAAOxM,OACTzC,IAAaL,MAAM,CAAEM,QAASgP,EAAOM,KAAK,SAE1ChL,GAAW,IAEV8D,EAASnJ,EAAQ+E,IAAR,kBAAuBW,EAAM5F,IAAMuJ,GAAUrJ,EAAQ2J,KAAK,UAAWN,IAC5EtH,MACC,SAACnB,GACCE,IAAakB,QAAQ,CACnBjB,QAASoI,EACP,gHACA,oFAEAlI,GACFA,EAAUL,EAASvC,SAGvB,WACEyC,IAAaL,MAAM,CAAEM,QAAS,gMAEhCqB,SAAQ,WACViD,GAAW,QAcXuE,cAAeT,EAAS,CACtBoF,iBAAkB7I,EAAM6I,iBACxB+B,gBAAiB5K,EAAM4K,gBACvBC,aAAcnN,IAAOsC,EAAM6K,cAC3BC,cAAe9K,EAAM8K,cACrBC,aAAc/K,EAAM+K,aACpB7T,KAAM8I,EAAM9I,KACZ8T,MAAOhL,EAAMgL,MACb7L,cAAea,EAAMb,cACrBC,OAAQY,EAAMZ,OACdxB,SAAUuM,GACV7L,YAAaI,OAAOsB,EAAM1B,aAAe0B,EAAMpC,SAASW,QAAO,SAACC,GAAsB,IAAdkG,EAAa,uDAAP,GAC5E,OAAOlG,GAAWkG,EAAIzG,cAAcC,SAAWwG,EAAIjG,OAAU,KAC5D,IAAIN,QAAQ,QAAS,KACtB,CACF0K,iBAAkB,EAClB1J,cAAe,EACf2L,cAAe,mDACflN,SAAU,CAAC,CAAExD,GAAI,KAAM8D,SAAU,KAEnCiG,oBAAkB,EAClB5C,MAAO,CAAE0J,SAAU,IAAKC,OAAQ,UAChCC,eAAgB,SAACC,EAAWC,GAC1B,GAAID,EAAUxN,UAAYA,GAASC,OAAQ,CACzC,IAAM+I,EAAayE,EAAUzN,SAASW,QAAO,SAACC,GAAsB,IAAdkG,EAAa,uDAAP,GACpD3G,EAAUH,GAASiJ,MAAM,SAAAC,GAAE,OAAIA,EAAG1M,KAAOsK,EAAItK,OAAQ,GAC3D,OAAOoE,GAAWkG,EAAIxG,SAAWH,EAAQU,OAAU,KAClD,GAEH6E,EAAKyF,eAAe,CAAEzK,YAAasI,MAlCzC,UAsCE,cAAC,GAAD,CAAUtD,KAAMA,EAAM1F,SAAUA,GAAUwJ,gBAAiBA,KAC3D,sBAAK7F,MAAO,CAAE+J,aAAc,QAA5B,UACE,cAAC,GAAD,CAAahI,KAAMA,IACnB,cAAC,KAAKc,KAAN,CACElN,KAAK,QACLmN,MAAM,gMAFR,SAIE,cAAC,IAAMkH,SAAP,MAEF,cAAC,KAAKnH,KAAN,CACElN,KAAK,gBACLmN,MAAM,uCACNE,MAAO,CACL,CACEC,UAAU,EACVnJ,QAAS,oFANf,SAUE,cAAC,IAAD,CAAQyB,QAASwD,EAAjB,SACGF,EAAStC,KAAI,SAAA3C,GAAM,OAClB,cAAC,GAAD,CAEE0E,MAAO1E,EAAOf,GAFhB,SAEqBe,EAAOjE,MADrBiE,EAAOf,WAKpB,cAAC,KAAKgK,KAAN,CACEyD,cAAY,EACZxD,MAAM,iFAFR,SAIG,kBACC,eAAC,KAAD,CAAKqD,OAAQ,GAAb,UACE,cAAC,KAAD,CAAK5E,KAAM,GAAX,SACE,cAAC,KAAKsB,KAAN,CACElN,KAAK,SACL0Q,SAAO,EAFT,SAIE,cAAC,IAAD,CAAQ9K,QAAS4D,EAAjB,SACGF,EAAM1C,KAAI,SAAA1G,GAAI,OACb,cAAC,GAAD,CAEEyI,MAAOzI,EAAKgD,GAFd,mBAEsBhD,EAAK0H,UAAY,GAFvC,YAE6C1H,EAAKyM,MAFlD,aAE4DzM,EAAK2H,WAD1D3H,EAAKgD,aAMnBkJ,EAAKyB,cAAc,YAAc3N,EAAKgD,GAAK,KAC1C,cAAC,KAAD,CAAK0I,KAAM,EAAX,SACE,cAAC,IAAD,CAAQzJ,KAAK,UAAUG,QAAS,WAC9B8J,EAAKyF,eAAe,CAAE3J,OAAQhI,EAAKgD,MADrC,wGAWXqJ,EAAS,KACR,qCACE,cAAC,KAAKW,KAAN,CAAWC,MAAM,mDAAjB,SACE,eAAC,KAAMiF,MAAP,CAAa5H,SAjKK,SAAAR,GAC5B0I,EAAiB1I,EAAEY,OAAOjC,QAgK8BA,MAAO8J,EAArD,UACE,cAAC,KAAD,CAAO9J,MAAO,EAAd,0JACA,cAAC,KAAD,CAAOA,MAAO,EAAd,4IAGe,IAAlB8J,EACC,cAAC,GAAD,IAEA,cAAC,KAAKvF,KAAN,CACElN,KAAK,aACLmN,MAAM,mDACNE,MAAO,CACL,CACEC,UAAU,EACVnJ,QAAS,4GANf,SAUE,cAAC,IAAD,CACEmQ,YAAU,EACV1O,QAAS2M,EACTgC,gBAAiBhC,EAAmB,cAAC,KAAD,CAAMxM,KAAK,UAAY,KAC3D4E,YAAY,iCACZ6J,SAAU3K,aAAS,IAAKgJ,IACxB4B,cAAc,EANhB,SAQGpC,EAAU5Q,KAAKmF,KAAI,SAAAa,GAAQ,OAC1B,cAAC,GAAD,CAEEkB,MAAOlB,EAASvE,GAFlB,mBAE0BuE,EAASzH,KAFnC,aAE4CyH,EAASkF,MAFrD,aAE+DlF,EAASE,cADjEF,EAASvE,cAQ5B,cAAC,KAAKgK,KAAN,CACElN,KAAK,cACLmN,MAAM,oDAFR,SAIE,cAAC,IAAD,CAAOhL,KAAK,aAEd,cAAC,KAAK+K,KAAN,2BAAenB,IAAf,aACE,cAAC,IAAD,CAAQ5J,KAAK,UAAU8L,SAAS,SAASrI,QAASA,EAAlD,SACG2G,EAAS,yDAAc,yDCtSrBmI,GAVK,WAClB,IAAM1S,EAAUC,cAEhB,OACE,cAAC,GAAD,CAAWoC,UAAW,YAAa,IAAVnB,EAAS,EAATA,GACvBlB,EAAQQ,KAAR,kBAAwBU,QC0CfyR,GA5CG,WAChB,MAA0BlQ,qBAA1B,mBAAOqE,EAAP,KAAcJ,EAAd,KACQxF,EAAOoL,cAAPpL,GACFlB,EAAUC,cAEV2S,EAAa,WACjBxR,EAAQ0G,IAAR,kBAAuB5G,IAAMiC,MAAK,SAAA4E,GAC5BjB,GAAS7H,KAAKW,UAAUkH,KAAW7H,KAAKW,UAAUmI,EAAItI,QACxDyC,IAAa2Q,QAAQ,CAAE1Q,QAAS,qcAAyF2Q,SAAU,IACnIpM,EAASqB,EAAItI,OAEVqH,GACHJ,EAASqB,EAAItI,SAEd4D,OAAM,SAAAC,GACPC,QAAQgJ,IAAIjJ,OAkBhB,OAdA2E,qBAAU,WACR2K,MACC,CAAC1R,IAEJ+G,qBAAU,WACR,IAAMC,EAAWC,aAAY,WAC3ByK,MACC,KAEH,OAAO,WACLxK,cAAcF,MAEf,CAAChH,EAAI4F,IAGNA,EACE,cAAC,GAAD,CACEA,MAAOA,EACPzE,UAAW,YAAa,IAAVnB,EAAS,EAATA,GACZlB,EAAQQ,KAAR,kBAAwBU,OAEvB,cAAC,GAAD,CAAS6C,KAAK,W,WCwEVgP,GA/GG,WAChB,MAA0BtQ,qBAA1B,mBAAOqE,EAAP,KAAcJ,EAAd,KACQxF,EAAOoL,cAAPpL,GAEF0R,EAAa,WACjBxR,EAAQ0G,IAAR,kBAAuB5G,IAAMiC,MAAK,SAAA4E,GAC5BjB,GAAS7H,KAAKW,UAAUkH,KAAW7H,KAAKW,UAAUmI,EAAItI,QACxDyC,IAAa2Q,QAAQ,CACnB1Q,QAAS,qcACT2Q,SAAU,IAEZpM,EAASqB,EAAItI,OAEVqH,GACHJ,EAASqB,EAAItI,SAEd4D,OAAM,SAAAC,GACPC,QAAQgJ,IAAIjJ,OAkBhB,OAdA2E,qBAAU,WACR2K,MACC,CAAC1R,IAEJ+G,qBAAU,WACR,IAAMC,EAAWC,aAAY,WAC3ByK,MACC,KAEH,OAAO,WACLxK,cAAcF,MAEf,CAAChH,EAAI4F,IAGNA,EACE,eAAC,KAAD,CACEkM,UAAQ,EACRlQ,MAAM,2GACNmQ,MACE,cAAC,IAAD,CAAMvN,GAAE,kBAAaxE,EAAb,SAAR,SAAgC,cAAC,IAAD,CAC9Bf,KAAK,UADyB,8FAJpC,UAOE,cAAC,KAAa+K,KAAd,CAAmBC,MAAM,sEAAzB,SAAyCrE,EAAM5F,KAC/C,cAAC,KAAagK,KAAd,CAAmBC,MAAM,kFAAzB,UAA4CrE,EAAMpC,UAAY,IAAIE,KAAI,SAAAC,GACpD5F,KAAKC,MAAM2F,EAAQE,cAAcmI,SAAW,MAC5D,OACE,eAAC,WAAD,WACGrI,EAAQ7G,KADX,KACmB6G,EAAQE,cAAcC,SAASC,QAAQ,QAAQ,IADlE,MAC0EJ,EAAQC,KAGhF,yBAJaD,EAAQ3D,SAQ3B,eAAC,KAAagK,KAAd,CAAmBC,MAAM,8CAAzB,UAEI3F,OAAOsB,EAAM1B,cAAgB0B,EAAMpC,UAAY,IAAIW,QAAO,SAACC,GAA0B,IAAlBT,EAAiB,uDAAP,GAC3E,OAAOS,GAAWT,EAAQE,cAAcC,SAAWH,EAAQU,OAAU,KACpE,IAAIN,QAAQ,QAAQ,IAJ3B,UAOA,cAAC,KAAaiG,KAAd,CAAmBC,MAAM,wFAAzB,SAA4CrE,EAAMoM,eAAelV,OACpC,IAA5B8I,EAAMoM,eAAehS,IAAY4F,EAAM4K,iBACxC,cAAC,KAAaxG,KAAd,CAAmBC,MAAM,kFAAzB,SAA2CrE,EAAM4K,kBACjD,eAAC,KAAaxG,KAAd,CACEC,MAAM,kFADR,UAC0B3G,IAAOsC,EAAM6K,cAAclN,OAAO,eAAe,uBAAMqC,EAAM+K,gBAEvF,cAAC,KAAa3G,KAAd,CAAmBC,MAAM,4EAAzB,SAA0CrE,EAAM8K,gBAChD,cAAC,KAAa1G,KAAd,CAAmBC,MAAM,uCAAzB,SAAkC,cAAC,EAAD,eAAerE,EAAMqM,gBACvD,cAAC,KAAajI,KAAd,CAAmBC,MAAM,iFAAzB,SACGrE,EAAM5I,KACL,qCACG4I,EAAM5I,KAAK0H,UACZ,qCACGkB,EAAM5I,KAAK0H,SACZ,0BAGDkB,EAAM5I,KAAK2H,SACZ,uBACCiB,EAAM5I,KAAKyM,MACZ,0BAEF,kEAGJ,cAAC,KAAaO,KAAd,CAAmBC,MAAM,mDAAzB,SACE,eAAC,IAAD,CAAMzF,GAAE,qBAAgBoB,EAAMrB,SAASvE,IAAvC,UACG4F,EAAMrB,SAASzH,KAChB,uBACC8I,EAAMrB,SAASkF,MAChB,uBAJF,cAKU7D,EAAMrB,SAASE,kBAG1BmB,EAAMgL,OAAS,cAAC,KAAa5G,KAAd,CAAmBC,MAAM,yFAAzB,SAA6CrE,EAAMgL,QACnE,cAAC,KAAa5G,KAAd,CAAmBC,MAAM,uCAAzB,SAAmC3G,IAAOsC,EAAMvC,WAAWE,OAAO,wBAClE,cAAC,KAAayG,KAAd,CAAmBC,MAAM,6CAAzB,SACGrE,EAAMsM,qBAAqBxO,KAAI,SAAA5E,GAAO,OACrC,eAAC,WAAD,WACE,8BAAIA,EAAQqT,WAAZ,OADF,IACgC7O,IAAOxE,EAAQuE,WAAWE,OAAO,sBAC/D,yBAFazE,EAAQkB,YAMX,cAAC,GAAD,CAAS6C,KAAK,WCjBvBuP,GA3FG,WAChB,MAA8B7Q,oBAAS,GAAvC,mBAAOmB,EAAP,KAAgB6C,EAAhB,KACA,EAAkChE,mBAAS,IAA3C,mBAAO4N,EAAP,KAAkBC,EAAlB,KACA,EAA4B7N,mBAAS,CAAEmE,KAAM,EAAG7C,KAAM,KAAtD,mBAAOiD,EAAP,KAAeC,EAAf,KAEMS,EAAe,SAACjI,GACpBwH,GAAU,SAAAU,GAAU,kCAAUA,GAAelI,OAGzCoR,EAAiBrR,uBAAY,WACjCiH,GAAW,GACXrF,EAAQ0G,IAAI,aAAc,CAAEd,WAAU7D,MAAK,SAAA4E,GACzCuI,EAAavI,EAAItI,SAChB4D,OAAM,WACPnB,IAAaL,MAAM,CAAEM,QAAS,mLAC7BqB,SAAQ,WACTiD,GAAW,QAEZ,CAACA,EAAY6J,EAActJ,IAExB5C,EAAUpF,mBAAQ,iBAAM,CAC5B,CACE8D,MAAO,qBACPuB,UAAW,QAEb,CACEvB,MAAO,QACPuB,UAAW,SAEb,CACEvB,MAAO,0GACPuB,UAAW,CAAC,SAAU,WAExB,CACEvB,MAAO,GACPgD,IAAK,SACLxB,OAAQ,SAACyB,EAAMb,GAAP,OACN,eAAC,IAAD,CAAOnB,KAAK,SAAZ,UACE,cAAC,EAAD,CACEzB,IAAG,qBAAgB4C,EAAOhE,IAC1BmB,UAAWwO,EACXtO,eAAe,sJACfC,aAAa,8JAEf,cAAC,IAAD,CAAMkD,GAAE,qBAAgBR,EAAOhE,GAAvB,SAAR,SAA0C,cAAC,IAAD,CACxC6C,KAAK,QADmC,8FAE1C,cAAC,IAAD,CAAM2B,GAAE,qBAAgBR,EAAOhE,IAA/B,SAAqC,cAAC,IAAD,CACnC6C,KAAK,QAD8B,4DAK1C,CAAC8M,IAEJ5I,qBAAU,WACR4I,MACC,CAACA,IAEJ,IAAME,EAASlJ,aAAS,KAAK,SAAUG,GACrCN,EAAa,CAAEqJ,OAAQ/I,EAAEY,OAAOjC,MAAOC,KAAM,EAAG7C,KAAM,QAGxD,OACE,qCACE,qBAAK7D,UAAU,iBAAf,SACE,cAAC,IAAD,CAAMwF,GAAG,iBAAT,SACE,cAAC,IAAD,CAAQxF,UAAU,eAAeC,KAAK,UAAtC,kEAGJ,qBAAKD,UAAU,gBAAf,SACE,cAAC,IAAD,CACEmI,MAAO,CAAEC,MAAO,KAChBE,SAAUuI,EACVpI,YAAY,qCAGhB,cAAC,IAAD,CAAOvE,QAASA,EAASgC,WAAYiK,EAAU5Q,KAAM4G,OAAO,KAAKzC,QAASA,EAAS0C,YAAY,IAC/F,qBAAKpG,UAAU,aAAf,SACE,cAAC,IAAD,CACE4I,iBAAiB,EACjBC,MAAOsH,EAAUrH,WACjBC,QAASjC,EAAOJ,KAChBsC,gBAAiBlC,EAAOjD,KACxByE,SAAU,SAAA5B,GACRc,EAAa,CAAEd,kBC5CZ2M,GAvCM,WACnB,MAAgC9Q,qBAAhC,mBAAOgD,EAAP,KAAiB+N,EAAjB,KACQtS,EAAOoL,cAAPpL,GAEFuS,EAAgBjU,uBAAY,WAChC4B,EAAQ0G,IAAR,qBAA0B5G,IAAMiC,MAAK,SAAA4E,GACnCyL,EAAYzL,EAAItI,SACf4D,OAAM,SAAAC,GACPC,QAAQgJ,IAAIjJ,QAEb,CAACpC,EAAIsS,IAMR,OAJAvL,qBAAU,WACRwL,MACC,CAACA,IAGFhO,EACE,qCACE,qBAAK4C,MAAO,CAAE+J,aAAc,IAA5B,SACE,eAAC,KAAD,CACEY,UAAQ,EACRlQ,MAAM,6HACNmQ,MACE,cAAC,IAAD,CAAMvN,GAAE,qBAAgBxE,EAAhB,SAAR,SAAmC,cAAC,IAAD,CACjCf,KAAK,UAD4B,8FAJvC,UAOE,cAAC,KAAa+K,KAAd,CAAmBC,MAAM,qBAAzB,SAAgC1F,EAASzH,OACzC,cAAC,KAAakN,KAAd,CAAmBC,MAAM,QAAzB,SAAkC1F,EAASkF,QAC3C,eAAC,KAAaO,KAAd,CAAmBC,MAAM,6CAAzB,iBAAwC1F,EAASE,oBAGrD,sEACA,cAAC,EAAD,CAAY1B,OAAQwB,EAASxB,OAAQC,cAAc,EAAON,SAAS,EAAOO,YAAasP,OAEvF,cAAC,GAAD,CAAS1P,KAAK,WCjChB0F,GAAiB,CACrBC,SAAU,CACRC,GAAI,CACFC,KAAM,IAERC,GAAI,CACFD,KAAM,IAGVE,WAAY,CACVH,GAAI,CACFC,KAAM,IAERC,GAAI,CACFD,KAAM,KAING,GAAqB,CACzBD,WAAY,CACVH,GAAI,CACFC,KAAM,GACNI,OAAQ,GAEVH,GAAI,CACFD,KAAM,GACNI,OAAQ,KA8IC0J,GAzIM,SAAC,GAAkC,IAAD,IAA/BjO,gBAA+B,MAApB,GAAoB,EAAhBpD,EAAgB,EAAhBA,UACrC,EAAe6H,KAAKC,UAAbC,EAAP,oBACA,EAA8B3H,oBAAS,GAAvC,mBAAOmB,EAAP,KAAgB6C,EAAhB,KACM8D,IAAY9E,EAASvE,GAwB3B,OACE,mCACE,eAAC,KAAD,2BACMuI,IADN,IAEEW,KAAMA,EACNpM,KAAK,WACLwM,SA5BW,SAACC,GAChBhE,GAAW,IACV8D,EAASnJ,EAAQ+E,IAAR,qBAA0BV,EAASvE,IAAMuJ,GAAUrJ,EAAQ2J,KAAK,aAAcN,IACrFtH,MACC,SAACnB,GACCE,IAAakB,QAAQ,CACnBjB,QAASoI,EAAM,sGACOvI,EAASvC,KAAKkU,iBADrB,6PAEW3R,EAASvC,KAAKkU,iBAFzB,sFAIbtR,GACFA,EAAUL,EAASvC,SAGvB,WACEyC,IAAaL,MAAM,CAAEM,QAAS,4MAEhCqB,SAAQ,WACViD,GAAW,OAWTuE,cAAeT,EAAS,CACtBI,MAAOlF,EAASkF,MAChBgJ,iBAAkBlO,EAASkO,iBAC3BC,QAASnO,EAASmO,QAClBC,kBAAmBpO,EAASoO,kBAC5BC,SAAUrO,EAASqO,SACnBC,mBAAoBtO,EAASsO,oBAC3B,GACJ9I,oBAAkB,EAbpB,UAeE,cAAC,KAAKC,KAAN,CACElN,KAAK,QACLmN,MAAM,QACNE,MAAO,CACL,CACElL,KAAM,QACNgC,QAAS,mFAEX,CACEmJ,UAAU,EACVnJ,QAAS,8CACToJ,YAAY,IAXlB,SAeE,cAAC,IAAD,MAEF,cAAC,KAAKL,KAAN,CACElN,KAAK,mBACLmN,MAAM,sHACNE,MAAO,CACL,CACEC,UAAU,EACVnJ,QAAS,2JACToJ,YAAY,IAPlB,SAWE,cAAC,IAAD,MAEF,cAAC,KAAKL,KAAN,CACElN,KAAK,UACLmN,MAAM,oGACNE,MAAO,CACL,CACEC,UAAU,EACVnJ,QAAS,yIACToJ,YAAY,IAPlB,SAWE,cAAC,IAAD,MAEF,cAAC,KAAKL,KAAN,CACElN,KAAK,oBACLmN,MAAM,mIACNE,MAAO,CACL,CACEC,UAAU,EACVnJ,QAAS,wKACToJ,YAAY,IAPlB,SAWE,cAAC,IAAD,MAEF,cAAC,KAAKL,KAAN,CACElN,KAAK,WACLmN,MAAM,kFACNE,MAAO,CACL,CACEC,UAAU,EACVnJ,QAAS,uHACToJ,YAAY,IAPlB,SAWE,cAAC,IAAD,MAEF,cAAC,KAAKL,KAAN,CACElN,KAAK,qBACLmN,MAAM,qBACNE,MAAO,CACL,CACEC,UAAU,EACVnJ,QAAS,yFANf,SAYE,cAAC,IAAD,MAEF,cAAC,KAAK+I,KAAN,2BAAenB,IAAf,aACE,cAAC,IAAD,CAAQ5J,KAAK,UAAU8L,SAAS,SAASrI,QAASA,EAAlD,SACG2G,EAAS,yDAAc,yDC3IrByJ,GAxBM,WACnB,MAAgCvR,qBAAhC,mBAAOgD,EAAP,KAAiB+N,EAAjB,KACQtS,EAAOoL,cAAPpL,GACFlB,EAAUC,cAUhB,OARAgI,qBAAU,WACR7G,EAAQ0G,IAAR,qBAA0B5G,IAAMiC,MAAK,SAAA4E,GACnCyL,EAAYzL,EAAItI,SACf4D,OAAM,SAAAC,GACPC,QAAQgJ,IAAIjJ,QAEb,CAACpC,IAGFuE,EACE,cAAC,GAAD,CACEA,SAAUA,EACVpD,UAAW,YAAa,IAAVnB,EAAS,EAATA,GACZlB,EAAQQ,KAAR,qBAA2BU,OAE1B,cAAC,GAAD,CAAS6C,KAAK,WCZVkQ,GAVQ,WACrB,IAAMjU,EAAUC,cAEhB,OACE,cAAC,GAAD,CAAcoC,UAAW,YAAa,IAAVnB,EAAS,EAATA,GAC1BlB,EAAQQ,KAAR,qBAA2BU,QCmElBgT,GAtEE,WACf,MAA8BzR,oBAAS,GAAvC,mBAAOmB,EAAP,KAAgB6C,EAAhB,KACA,EAAgChE,mBAAS,IAAzC,mBAAOiC,EAAP,KAAiBiM,EAAjB,KAEMwD,EAAgB3U,uBAAY,WAChCiH,GAAW,GACXrF,EAAQ0G,IAAI,aAAa3E,MAAK,SAAA4E,GAC5B4I,EAAY5I,EAAItI,SACf4D,OAAM,WACPnB,IAAaL,MAAM,CAAEM,QAAS,2JAC7BqB,SAAQ,WACTiD,GAAW,QAEZ,CAACA,EAAYkK,IAEVvM,EAAUpF,mBAAQ,iBAAM,CAC5B,CACE8D,MAAO,2EACPuB,UAAW,QAEb,CACEvB,MAAO,6CACPuB,UAAW,QAEb,CACEvB,MAAO,gEACPuB,UAAW,cAEb,CACEvB,MAAO,wGACPuB,UAAW,SAEb,CACEvB,MAAO,mDACPuB,UAAW,eAEb,CACEvB,MAAO,GACPgD,IAAK,SACLxB,OAAQ,SAACyB,EAAMb,GAAP,OACN,eAAC,IAAD,CAAOnB,KAAK,SAAZ,UACE,cAAC,EAAD,CACEzB,IAAG,oBAAe4C,EAAOhE,IACzBmB,UAAW8R,EACX5R,eAAe,oIACfC,aAAa,sIAEf,cAAC,IAAD,CAAMkD,GAAE,oBAAeR,EAAOhE,GAAtB,SAAR,SAAyC,cAAC,IAAD,CACvC6C,KAAK,QADkC,sGAK9C,CAACoQ,IAMJ,OAJAlM,qBAAU,WACRkM,MACC,CAACA,IAGF,qCACE,qBAAKjU,UAAU,iBAAf,SACE,cAAC,IAAD,CAAMwF,GAAG,gBAAT,SACE,cAAC,IAAD,CAAQxF,UAAU,eAAeC,KAAK,UAAtC,kEAGJ,cAAC,IAAD,CAAOiE,QAASA,EAASgC,WAAY1B,EAAU2B,OAAO,KAAKzC,QAASA,EAAS0C,YAAY,QC2BhF8N,GAvFK,SAAC,GAAiC,IAAD,IAA9BvP,eAA8B,MAApB,GAAoB,EAAhBxC,EAAgB,EAAhBA,UACnC,EAAe6H,KAAKC,UAAbC,EAAP,oBACA,EAA8B3H,oBAAS,GAAvC,mBAAOmB,EAAP,KAAgB6C,EAAhB,KACM8D,IAAY1F,EAAQ3D,GAwB1B,OACE,mCACE,eAAC,KAAD,2BACMuI,IADN,IAEEW,KAAMA,EACNpM,KAAK,UACLwM,SA5BW,SAACC,GAChBhE,GAAW,IACV8D,EAASnJ,EAAQ+E,IAAR,oBAAyBtB,EAAQ3D,IAAMuJ,GAAUrJ,EAAQ2J,KAAK,YAAaN,IAClFtH,MACC,SAACnB,GACCE,IAAakB,QAAQ,CACnBjB,QAASoI,EAAM,oFACIvI,EAASvC,KAAKzB,KADlB,2OAEQgE,EAASvC,KAAKzB,KAFtB,sFAIbqE,GACFA,EAAUL,EAASvC,SAGvB,WACEyC,IAAaL,MAAM,CAAEM,QAAS,0LAEhCqB,SAAQ,WACViD,GAAW,OAWTuE,cAAeT,EAAS,CACtBvM,KAAM6G,EAAQ7G,KACdiR,YAAapK,EAAQoK,aACnB,GACJhE,oBAAkB,EATpB,UAWE,cAAC,KAAKC,KAAN,CACElN,KAAK,OACLmN,MAAM,2EACNE,MAAO,CACL,CACEC,UAAU,EACVnJ,QAAS,gHACToJ,YAAY,IAPlB,SAWE,cAAC,IAAD,MAEF,cAAC,KAAKL,KAAN,CACElN,KAAK,OACLmN,MAAM,6CAFR,SAIE,cAAC,IAAD,MAEF,cAAC,KAAKD,KAAN,CACElN,KAAK,aACLmN,MAAM,+EAFR,SAIE,cAAC,IAAD,CAAOhL,KAAK,aAEd,cAAC,KAAK+K,KAAN,CACElN,KAAK,QACLmN,MAAM,wGAFR,SAIE,cAAC,IAAD,CAAOhL,KAAK,aAEd,cAAC,KAAK+K,KAAN,CACElN,KAAK,cACLmN,MAAM,mDAFR,SAIE,cAAC,IAAMkH,SAAP,MAEF,cAAC,KAAKnH,KAAN,2BAAenB,IAAf,aACE,cAAC,IAAD,CAAQ5J,KAAK,UAAU8L,SAAS,SAASrI,QAASA,EAAlD,SACG2G,EAAS,yDAAc,yDC5ErB8J,GAVO,WACpB,IAAMrU,EAAUC,cAEhB,OACE,cAAC,GAAD,CAAaoC,UAAW,WACtBrC,EAAQQ,KAAK,iBCqBJ8T,GAxBK,WAClB,MAA8B7R,qBAA9B,mBAAOoC,EAAP,KAAgB0P,EAAhB,KACQrT,EAAOoL,cAAPpL,GACFlB,EAAUC,cAUhB,OARAgI,qBAAU,WACR7G,EAAQ0G,IAAR,oBAAyB5G,IAAMiC,MAAK,SAAA4E,GAClCwM,EAAWxM,EAAItI,SACd4D,OAAM,SAAAC,GACPC,QAAQgJ,IAAIjJ,QAEb,CAACpC,IAGF2D,EACE,cAAC,GAAD,CACEA,QAASA,EACTxC,UAAW,WACTrC,EAAQQ,KAAK,gBAEZ,cAAC,GAAD,CAASuD,KAAK,W,qBCxBVyQ,GAFO,kBAAM,IAAItE,MAAK,IAAIA,MAAOuE,UAA6C,IAAjC,IAAIvE,MAAOwE,oBAA2B,KAAMC,cAAcC,MAAM,KAAKC,SCQ3HC,GAAmB,WACvB,IAAMC,EAA0B5V,aAAaC,QAAQ,wBAErD,OAAO2V,EAA0B9V,KAAKW,UAAU,CAACmV,EAAyBP,OAAoB,MAG1FQ,GAA0B,SAAAC,GAC9B,IAAKA,EACH,OAAO,KAGT,MAA6BhW,KAAKC,MAAM+V,GAAxC,mBAAOC,EAAP,KAAkBC,EAAlB,KAEA,OAAKD,GAAcC,EAIZ,CAAC3Q,IAAO0Q,GAAY1Q,IAAO2Q,IAHzB,MA8KIC,GAxKI,WACjB,MAA4B3S,mBAAS,CAAEhD,KAAM,KAA7C,mBAAOwE,EAAP,KAAeoR,EAAf,KACA,EAA8B5S,qBAA9B,mBAAOmB,EAAP,KAAgB6C,EAAhB,KACA,EAA4BhE,mBAAS,CACnCmE,KAAM,EACN7C,KAAM,IACNQ,UAAWuQ,OAHb,mBAAO9N,EAAP,KAAeC,EAAf,KAMAgB,qBAAU,WACR,GAAIjB,EAAOzC,UAAW,CACpB,MAAoBtF,KAAKC,MAAM8H,EAAOzC,WAA/B2Q,EAAP,oBAEIA,GACF/V,aAAaQ,QAAQ,uBAAwBuV,MAGhD,CAAClO,EAAOzC,YAEX,IAAMG,EAAWT,EAAOxE,KAAK4F,QAAO,SAAC0I,EAAKjH,GACxC,OAAOiH,EAAIwD,OAAOzK,EAAMpC,SAASE,KAAI,SAAA0Q,GAAI,kCACpCA,GADoC,IAEvCrP,cAAea,EAAMb,cACrBsP,gBAAiBzO,EAAMqM,YAAYnV,aAEpC,IAEGwX,EAAiBC,aAAQ/Q,EAAU,QACnCgR,EAAiBD,aAAQxR,EAAOxE,KAAM,oBAExCkW,EAAa,EAEXC,EAAY/H,OAAOC,KAAK4H,GAAgB9Q,KAAI,SAAA3C,GAChD,IAAMgC,EAASyR,EAAezT,GACxB4T,EAAQ5R,EAAOoB,QAAO,SAACyQ,EAAahP,GACxC,IAAM3B,EAAS2B,EAAM1B,aAAe0B,EAAMpC,SAASW,QAAO,SAAC0I,EAAKgB,GAE9D,OADAhB,GAAOjD,OAAOiE,EAAKhK,cAAcC,UAAY8F,OAAOiE,EAAKxJ,SAExD,GACH,OAAOuQ,EAAchL,OAAO3F,KAC3B,GAEHwQ,GAAcE,EAEd,IAAME,EAAkB9R,EAAOoB,QAAO,SAAC0I,EAAKjH,GAC1C,OAAOiH,EAAIwD,OAAOzK,EAAMpC,SAASE,KAAI,SAAA0Q,GAAI,kCACpCA,GADoC,IAEvCrP,cAAea,EAAMb,cACrBsP,gBAAiBzO,EAAMqM,YAAYnV,aAEpC,IACGwX,EAAiBC,aAAQM,EAAiB,QAahD,MAAO,CACL9T,SACA4T,QACA7Q,SAfuB6I,OAAOC,KAAK0H,GAAgB5Q,KAAI,SAAAkB,GAMvD,MAAQ,CACN3F,KAAM2F,EACNa,MAPY6O,EAAe1P,GAAKT,QAAO,SAAC0I,EAAKgB,GAE7C,OADAhB,GAAOjD,OAAOiE,EAAKhK,cAAcC,UAAY+J,EAAKiH,YAAc,MAE/D,WAeDvW,EAAOoO,OAAOC,KAAK0H,GAAgB5Q,KAAI,SAAAkB,GAS3C,MAAQ,CACN3F,KAAM2F,EAENa,MAXY6O,EAAe1P,GAAKT,QAAO,SAAC0I,EAAKgB,GAK7C,OAJAhB,EAAIkI,KAAOnL,OAAOiE,EAAKhK,cAAcC,UAAY+J,EAAKiH,YAAc,IACzC,IAAvBjH,EAAK9I,gBACP8H,EAAImI,KAAOpL,OAAOiE,EAAKhK,cAAcC,UAAY+J,EAAKiH,YAAc,KAE/DjI,IACN,CAAEkI,IAAK,EAAGC,IAAK,IAKHD,QAIXE,EAAgB1W,EAAK4F,QAAO,SAAC0I,EAAKgB,GACtC,OAAOhB,EAAMjD,OAAOiE,EAAKpI,SACxB,GAEGjF,EAAS,CACb0U,cAAe,GACf3W,OACA4W,WAAY,QACZC,WAAY,OACZC,OAAQ,EACRC,YAAa,GACbrL,MAAO,CACLsL,YAAY,EACZtW,KAAM,QACN6J,OAAQ,OACR0M,QAAS,UACTrO,MAAO,CACLsO,UAAW,SACXvJ,SAAU,KAGdwJ,UAAW,CACT9T,OAAO,EACP4T,QAAS,CACPrO,MAAO,CACLwO,WAAY,WACZC,SAAU,SACVC,aAAc,YAEhBC,UAAW,0DAAeb,OAqBhC,OAZAlO,qBAAU,WACRxB,GAAW,GACXrF,EAAQ0G,IAAI,UAAW,CACrBd,WACC7D,MAAK,SAAA4E,GACNsN,EAAUtN,EAAItI,SACb4D,OAAM,eACNG,SAAQ,WACTiD,GAAW,QAEZ,CAACO,IAGF,qCACE,cAAC,KAAWiQ,YAAZ,CACE5O,MAAO,CAAE+J,aAAc,OAAQ9J,MAAO,KACtC3B,MAAOqO,GAAwBhO,EAAOzC,WACtCiE,SAAU,SAAC7B,EAAOuQ,IArBH,SAACzX,GACpBwH,GAAU,SAAAU,GAAU,kCAAUA,GAAelI,MAqBvCiI,CAAa,CAAEnD,UAAWtF,KAAKW,UAAUsX,QAG7C,eAAC,KAAD,CACEpU,MAAM,qGACNkQ,UAAQ,EACR9B,OAAO,WACP7I,MAAO,CAAE+J,aAAc,IAJzB,UAMGwD,EAAUhR,KAAI,SAAAmK,GAAI,OACjB,eAAC,KAAa7D,KAAd,CAAqCC,MAAO4D,EAAK9M,OAAjD,UACG8M,EAAK/J,SAASJ,KAAI,SAAA0Q,GAAI,OAAI,eAAC,WAAD,WAA0B,8BAAIA,EAAKnV,KAAT,OAA1B,IAA+CmV,EAAK3O,MAApD,gBAA6D,yBAA9C2O,EAAKnV,SAC9C4O,EAAK8G,MAFR,SAAwB9G,EAAK9M,WAK/B,eAAC,KAAaiJ,KAAd,CAAmBC,MAAM,iCAAzB,UACG1L,EAAKmF,KAAI,SAAA0Q,GAAI,OAAI,eAAC,WAAD,WAA0B,8BAAIA,EAAKnV,KAAT,OAA1B,IAA+CmV,EAAK3O,MAApD,gBAA6D,yBAA9C2O,EAAKnV,SACrCwV,EAFH,aAKF,cAAC,KAAD,2BAASjU,GAAT,IAAiBkC,QAASA,SCnKxBuT,GAAmBrX,IAAnBqX,QAASC,GAAUtX,IAAVsX,MAEXC,GAAS,CACb,CAAEC,KAAM,IAAKC,UAAW,cAAC,EAAD,KACxB,CAAED,KAAM,cAAeC,UAAW,cAAC,GAAD,KAClC,CAAED,KAAM,mBAAoBC,UAAW,cAAC,GAAD,KACvC,CAAED,KAAM,cAAeC,UAAW,cAACC,GAAD,KAClC,CAAEF,KAAM,SAAUC,UAAW,cAAC,GAAD,KAC7B,CAAED,KAAM,aAAcC,UAAW,cAACE,GAAD,KACjC,CAAEH,KAAM,aAAcC,UAAW,cAACG,GAAD,KACjC,CAAEJ,KAAM,aAAcC,UAAW,cAAC,GAAD,KACjC,CAAED,KAAM,iBAAkBC,UAAW,cAAC,GAAD,KACrC,CAAED,KAAM,iBAAkBC,UAAW,cAAC,GAAD,KACrC,CAAED,KAAM,sBAAuBC,UAAW,cAAC,GAAD,KAC1C,CAAED,KAAM,YAAaC,UAAW,cAAC,GAAD,KAChC,CAAED,KAAM,gBAAiBC,UAAW,cAAC,GAAD,KACpC,CAAED,KAAM,qBAAsBC,UAAW,cAAC,GAAD,KACzC,CAAED,KAAM,WAAYC,UAAW,cAAC,GAAD,KAC/B,CAAED,KAAM,cAAeC,UAAW,cAAC,GAAD,MAsFrBI,GAnFD,WACZ,MAAsBhZ,IAAXU,EAAX,oBACMuY,EAAWC,cAEXC,EAAmB9Y,mBAAQ,WAC/B,OAAI4Y,EAASG,SAASC,MAAM,UACnB,QAELJ,EAASG,SAASC,MAAM,cACnB,YAELJ,EAASG,SAASC,MAAM,aACnB,WAELJ,EAASG,SAASC,MAAM,YACnB,UAELJ,EAASG,SAASC,MAAM,eACnB,aAEF,WACN,CAACJ,EAASG,WAEb,OACE,eAAC,IAAD,WACE,eAACX,GAAD,CACEa,WAAW,KACXC,eAAe,IAFjB,UAIE,qBAAKhY,UAAU,OAAf,6BACA,eAAC,IAAD,CAAMiY,MAAM,OAAOC,KAAK,SAASC,aAAc,CAACP,GAAhD,UACE,cAAC,IAAK5M,KAAN,CAAwB9K,KAAM,cAACkY,EAAA,EAAD,IAA9B,SACE,cAAC,IAAD,CAAM5S,GAAG,IAAT,mDADa,UAGdrG,GACD,cAAC,IAAK6L,KAAN,CAAuB9K,KAAM,cAACmY,EAAA,EAAD,IAA7B,SACE,cAAC,IAAD,CAAM7S,GAAG,SAAT,uFADa,SAIf,cAAC,IAAKwF,KAAN,CAA2B9K,KAAM,cAACoY,EAAA,EAAD,IAAjC,SACE,cAAC,IAAD,CAAM9S,GAAG,aAAT,qEADa,aAGf,cAAC,IAAKwF,KAAN,CAA0B9K,KAAM,cAACqY,EAAA,EAAD,IAAhC,SACE,cAAC,IAAD,CAAM/S,GAAG,YAAT,mDADa,YAGf,cAAC,IAAKwF,KAAN,CAAyB9K,KAAM,cAACsY,EAAA,EAAD,IAA/B,SACE,cAAC,IAAD,CAAMhT,GAAG,WAAT,yDADa,WAGdrG,GACD,cAAC,IAAK6L,KAAN,CAA4B9K,KAAM,cAACuY,EAAA,EAAD,IAAlC,SACE,cAAC,IAAD,CAAMjT,GAAG,cAAT,2EADa,oBAMnB,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAACyR,GAAD,CAAS9O,MAAO,CAAE2J,OAAQ,eAA1B,SACE,qBAAK9R,UAAU,yBAAyBmI,MAAO,CAAEuQ,QAAS,IAA1D,SACGvZ,EACC,cAAC,IAAD,UACGgY,GAAOzS,KAAI,SAAAiU,GAAK,OACf,cAAC,IAAD,CAAwBC,OAAK,EAACxB,KAAMuB,EAAMvB,KAA1C,SACGuB,EAAMtB,WADGsB,EAAMvB,WAMtB,cAAC,IAAD,UACGD,GAAOxQ,QAAO,SAAAgS,GAAK,OAAMA,EAAMvB,KAAKU,MAAM,YAAca,EAAMvB,KAAKU,MAAM,kBAAiBpT,KAAI,SAAAiU,GAAK,OAClG,cAAC,IAAD,CAAwBC,OAAK,EAACxB,KAAMuB,EAAMvB,KAA1C,SACGuB,EAAMtB,WADGsB,EAAMvB,sB,qBCrDrByB,I,QA3DD,WACZ,MAAuBpa,IAAdY,EAAT,oBACA,EAA8BkD,oBAAS,GAAvC,mBAAOmB,EAAP,KAAgB6C,EAAhB,KAqBA,OACE,qBAAKvG,UAAU,qBAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,eAAC,KAAD,CACElC,KAAK,eACLkC,UAAU,aACV8K,cAAe,CAAEgO,UAAU,GAC3BxO,SA1BS,SAAAC,GACfhE,GAAW,GACXrF,EACG2J,KAAK,eAAgB,CACpBlF,SAAU4E,EAAO5E,SACjB+E,SAAUH,EAAOG,WAElBzH,MAAK,SAACnB,GACDA,EAASvC,KAAKwZ,aAChB9Z,aAAaQ,QAAQ,QAASqC,EAASvC,KAAKwZ,aAE9C1Z,EAAWyC,EAASvC,SACnB4D,OAAM,WACTnB,IAAaL,MAAM,CAAEM,QAAS,+IAC7BqB,SAAQ,WACTiD,GAAW,OAOT,UAME,cAAC,KAAKyE,KAAN,CACElN,KAAK,WACLqN,MAAO,CAAC,CAAEC,UAAU,EAAMnJ,QAAS,8EAFrC,SAIE,cAAC,IAAD,CAAO+W,OAAQ,cAACR,EAAA,EAAD,CAAcxY,UAAU,wBAAyByI,YAAY,qCAE9E,cAAC,KAAKuC,KAAN,CACElN,KAAK,WACLqN,MAAO,CAAC,CAAEC,UAAU,EAAMnJ,QAAS,oFAFrC,SAIE,cAAC,IAAMuJ,SAAP,CACEwN,OAAQ,cAACC,GAAA,EAAD,CAAcjZ,UAAU,wBAChCC,KAAK,WACLwI,YAAY,2CAGhB,cAAC,KAAKuC,KAAN,UACE,cAAC,IAAD,CAAQtH,QAASA,EAASzD,KAAK,UAAU8L,SAAS,SAAS/L,UAAU,oBAArE,uDC7CN6J,I,QAAqB,CACzBD,WAAY,CACVH,GAAI,CACFC,KAAM,GACNI,OAAQ,GAEVH,GAAI,CACFD,KAAM,GACNI,OAAQ,OAsHCiE,GAjHG,WAChB,MAAe/D,KAAKC,UAAbC,EAAP,oBACA,EAA8B3H,oBAAS,GAAvC,mBAAOmB,EAAP,KAAgB6C,EAAhB,KACA,EAA8BhE,oBAAS,GAAvC,mBAAOW,EAAP,KAAgBgW,EAAhB,KACA,EAAgC3W,mBAAS,IAAzC,mBAAOiC,EAAP,KAAiBiM,EAAjB,KACA,EAA8ClO,oBAAS,GAAvD,mBAAOyL,EAAP,KAAwB0C,EAAxB,KAEA3I,qBAAU,WACR2I,GAAmB,GACnBxP,EAAQ0G,IAAI,aAAa3E,MAAK,SAAA4E,GAC5B4I,EAAY5I,EAAItI,SACf4D,OAAM,WACPnB,IAAaL,MAAM,CAAEM,QAAS,uKAC7BqB,SAAQ,WACToN,GAAmB,QAEpB,CAACD,EAAaC,IAyCjB,OAAOxN,EACL,sBAAKiF,MAAO,CAAE0J,SAAU,IAAKC,OAAQ,sBAAuB4G,QAAS,QAArE,UACE,2IACA,0VACA,mBAAGS,KAAK,sBAAR,SACE,cAAC,IAAD,CAAQtV,KAAK,QAAb,+GAGJ,sBAAK7D,UAAU,aAAf,UACE,qBAAKmI,MAAO,CAAE0J,SAAU,IAAKC,OAAQ,uBAArC,SACE,mbACkB,sBAAM3J,MAAO,CAAElH,MAAO,OAAtB,eADlB,2FAEiB,uFAFjB,kQAIF,eAAC,KAAD,CACE+P,OAAO,WACP9G,KAAMA,EACNpM,KAAK,QACLwM,SAzDW,SAACC,GAChB,IAAM0G,EAAS,GAEV1G,EAAO/F,UAAa+F,EAAO/F,SAASC,OAE9B8F,EAAO/F,SAAS8M,MAAK,SAAA3M,GAAO,OAAKA,EAAQG,aAClDmM,EAAO3Q,KAAK,6JAFZ2Q,EAAO3Q,KAAK,gGAKQiK,EAAO/F,SAASW,QAAO,SAACC,GAAsB,IAAdkG,EAAa,uDAAP,GAC1D,OAAOlG,GAAUkG,EAAIxG,UAAY,KAChC,GAEiB,IAAkC,IAA5ByF,EAAOkF,kBAC/BwB,EAAO3Q,KAAK,oQAGV2Q,EAAOxM,OACTzC,IAAaL,MAAM,CAAEM,QAASgP,EAAOM,KAAK,SAE1ChL,GAAW,GAEXrF,EAAQ2J,KAAK,UAAWN,GACrBtH,MACC,WACEjB,IAAakB,QAAQ,CACnBjB,QAAS,0FAEXiX,GAAW,MAEb,WACElX,IAAaL,MAAM,CAAEM,QAAS,qJAEhCqB,SAAQ,WACViD,GAAW,QAwBXuE,cAAe,CACb2E,iBAAkB,EAClB1J,cAAe,EACf2L,cAAe,mDACflN,SAAU,CAAC,CAAExD,GAAI,KAAM8D,SAAU,KAEnCiG,oBAAkB,EAClB5C,MAAO,CAAE0J,SAAU,IAAKC,OAAQ,SAAUsH,cAAe,IAZ3D,UAcE,cAAC,GAAD,CAAUlP,KAAMA,EAAM1F,SAAUA,EAAUwJ,gBAAiBA,IAC3D,cAAC,GAAD,CAAa9D,KAAMA,IACnB,cAAC,GAAD,CAAgBiF,eAAa,IAC7B,cAAC,KAAKnE,KAAN,CACElN,KAAK,QACLmN,MAAM,gMAFR,SAIE,cAAC,IAAMkH,SAAP,MAEF,cAAC,KAAKnH,KAAN,CAAWyD,cAAY,EAAvB,SACG,WACC,IACMjB,GADgBtD,EAAKyB,cAAc,aAAe,IACvBxG,QAAO,SAACC,GAAsB,IAAdkG,EAAa,uDAAP,GAC/C3G,EAAUH,EAASiJ,MAAM,SAAAC,GAAE,OAAIA,EAAG1M,KAAOsK,EAAItK,OAAQ,GAC3D,OAAOoE,GAAWkG,EAAIxG,SAAWH,EAAQU,OAAU,KAClD,GACH,MAAM,+EAAN,OAA0BmI,EAA1B,WAGJ,cAAC,KAAKxC,KAAN,2BAAenB,IAAf,aACE,cAAC,IAAD,CAAQ5J,KAAK,UAAU8L,SAAS,SAASlI,KAAK,QAAQH,QAASA,EAA/D,8ECtHVY,IAAO+U,OAAO,MAEd,IA0BeC,GA1BH,WACV,IAAM5a,EAAWC,cAEXX,EAAOa,YAAYN,GAUzB,OARAwJ,qBAAU,WACR,IAAMwR,EAAkBxa,KAAKC,MAAMC,aAAaC,QAAQ,SAEpDqa,GACF7a,EAASR,EAAQqb,MAElB,CAAC7a,IAEGV,EACL,cAAC,GAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4a,OAAK,EAACxB,KAAK,IAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOwB,OAAK,EAACxB,KAAK,cAAlB,SACE,cAAC,GAAD,UC/BOoC,eAAe,CAC5BC,QAAS,CACPjb,KAAMkb,KCOKC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqB5W,MAAK,YAAkD,IAA/C6W,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCKdO,IAAS/V,OACP,cAAC,IAAD,CAAUgW,MAAOA,GAAjB,SACE,cAAC,IAAD,CAAgBf,OAAQA,IAAxB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,UAKNgB,SAASC,eAAe,SAM1BX,M","file":"static/js/main.6c85005a.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    user: null,\n  },\n  reducers: {\n    setUser: (state, action) => {\n      state.user = action.payload;\n    },\n  },\n});\n\nexport const { setUser } = authSlice.actions;\n\nexport const selectUser = state => state.auth.user;\n\nexport default authSlice.reducer;\n","import { useCallback, useMemo } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser, setUser } from \"../config/authSlice\";\n\nconst useAuth = () => {\n  const dispatch = useDispatch();\n  const userFromRedux = useSelector(selectUser);\n\n  const user = useMemo(() => {\n    return userFromRedux || JSON.parse(localStorage.getItem(\"user\")) || {}\n  }, [userFromRedux]);\n\n  const isAdmin = useMemo(() => {\n    return user && user.role && user.role.name === \"admin\"\n  }, [user]);\n\n  const updateUser = useCallback((data) => {\n    const newUser = { ...user, ...data };\n\n    dispatch(setUser(newUser));\n    localStorage.setItem(\"user\", JSON.stringify(newUser));\n  }, [user, dispatch])\n\n  return [user, updateUser, isAdmin];\n}\n\nexport default useAuth;","import React from 'react';\nimport { Layout, Button } from 'antd';\nimport { LogoutOutlined } from '@ant-design/icons';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { setUser } from \"../../../../config/authSlice\";\n\nconst { Header } = Layout;\n\nconst AdminHeader = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const logout = () => {\n    dispatch(setUser(null));\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"token\");\n    history.push(\"/\");\n  }\n\n  return (\n    <Header className=\"site-layout-sub-header-background\">\n      <Button type=\"primary\"\n              icon={<LogoutOutlined/>} onClick={logout}>Выйти</Button>\n    </Header>\n  )\n}\n\nexport default AdminHeader;","import React from \"react\";\nimport { Tag } from 'antd';\n\nconst COLORS = {\n  1: \"orange\",\n  2: \"geekblue\",\n  3: \"blue\",\n  4: \"cyan\",\n  5: \"lime\",\n  6: \"purple\",\n  7: \"green\"\n}\n\nconst StatusTag = ({ id, name }) => (\n  <Tag color={COLORS[id]}>{name}</Tag>\n)\n\nexport default StatusTag","import axios from \"axios\";\nimport { notification } from \"antd\";\nimport { getUserToken } from \"./user\";\n\nconst request = axios.create({\n  baseURL: process.env.NODE_ENV === \"development\" ? \"http://localhost:5000/api/\" : \"/api/\"\n});\n\nrequest.interceptors.request.use(function (config) {\n  const token = getUserToken();\n  if (token) {\n    config.headers[\"x-access-token\"] = token;\n  }\n  // Do something before request is sent\n  return config;\n}, function (error) {\n  // Do something with request error\n  return Promise.reject(error);\n});\n\nrequest.interceptors.response.use(\n  response => {\n    return response;\n  },\n  function (error) {\n    // Do something with response error\n    if (error.response.status === 401) {\n      notification.error({ message: error.response.data.message || \"Ошибка авторизации!\" });\n    }\n    return Promise.reject(error.response);\n  }\n);\n\nexport default request;","export const getUserToken = () => localStorage.getItem(\"token\")","import React, { useState } from 'react';\nimport { Button, Popconfirm, notification } from 'antd';\nimport request from \"../../utils/request\";\n\nconst DeleteAction = ({ onSuccess = () => {}, url, successMessage, errorMessage }) => {\n  const [deleteConfirmVisible, setDeleteConfirmVisible] = useState(false);\n  const [deleteConfirmLoading, setDeleteConfirmLoading] = useState(false);\n\n  return (\n    <Popconfirm\n      title=\"Вы действительно хотите удалить?\"\n      placement=\"topRight\"\n      visible={deleteConfirmVisible}\n      onConfirm={() => {\n        setDeleteConfirmLoading(true);\n        request.delete(url).then(() => {\n          notification.success({ message: successMessage })\n          onSuccess();\n        }).catch(err => {\n          notification.error({ message: errorMessage });\n          console.error(err);\n        }).finally(() => {\n          setDeleteConfirmLoading(false);\n          setDeleteConfirmVisible(false);\n        })\n      }}\n      okText=\"Удалить\"\n      cancelText=\"Отмена\"\n      okButtonProps={{ loading: deleteConfirmLoading, danger: true }}\n      onCancel={() => {\n        setDeleteConfirmVisible(false);\n      }}\n    >\n      <Button\n        size=\"small\"\n        danger\n        onClick={() => {\n          setDeleteConfirmVisible(true);\n        }}\n      >Удалить</Button>\n    </Popconfirm>\n  )\n};\n\nexport default DeleteAction","import React, { Fragment } from 'react';\nimport { Table, Space, Button, notification } from 'antd';\nimport { Link, useHistory } from \"react-router-dom\";\nimport moment from \"moment\";\nimport StatusTag from \"../../../../../components/status-tag/StatusTag\";\nimport DeleteAction from \"../../../../../components/delete-action/DeleteAction\";\nimport request from \"../../../../../utils/request\";\nimport useAuth from \"../../../../../hooks/useAuth\";\n\n\nconst OrdersList = ({ orders, loading, showCustomer = true, fetchOrders }) => {\n  const [user] = useAuth();\n  const history = useHistory();\n\n  const takeOrder = (id) => {\n    request.put(`/orders/${id}`, { orderStatusId: 2, userId: user.id })\n      .then(() => {\n        notification.success({ message: \"Заказ успешно принят вами\" })\n        history.push(`/orders/${id}`)\n      })\n      .catch(() => {\n        notification.error({ message: \"Не удалось принять заказ\" })\n      })\n  }\n\n  const columns = [\n    {\n      title: 'Номер заказа',\n      dataIndex: 'id',\n    },\n    {\n      title: 'Дата регистрации',\n      dataIndex: 'createdAt',\n      render: createdAt => (\n        moment(createdAt).format('D MMMM YYYY, HH:mm')\n      ),\n    },\n    {\n      title: 'Предмет заказа',\n      dataIndex: \"products\",\n      render: products => (\n        products && !!products.length && products.map(product => (\n          <Fragment key={product.id}>\n            {`${product.name} (${product.unit} x ${product.order_product.quantity.replace(/\\.0+$/, '')})`}\n            <br/>\n          </Fragment>\n        ))\n      ),\n    },\n    {\n      title: 'К оплате',\n      dataIndex: \"products\",\n      render: (products, record) => {\n        const amount = record.totalAmount || (products || []).reduce((result, product = {}) => {\n          return result + ((product.order_product.quantity * product.price) || 0);\n        }, 0)\n        return (\n          products && !!products.length && `${String(amount).replace(/\\.0+$/, '')} BYN`\n        )\n      },\n    },\n    ...(showCustomer ? [{\n      title: 'Заказчик',\n      dataIndex: \"customer\",\n      render: customer =>\n        <Link to={`/customers/${customer.id}`}>\n          {customer.name} +375{customer.phoneNumber}\n        </Link>\n    }] : []),\n    {\n      title: 'Статус',\n      dataIndex: \"orderStatus\",\n      render: status => (\n        <StatusTag id={status.id} name={status.name}/>\n      ),\n    },\n    {\n      title: 'Ответственный',\n      dataIndex: \"user\",\n      render: user => (\n        user && `${user.fullName || \"\"}${user.fullName && user.username ? \", \" : \"\"}${user.username}`\n      ),\n    },\n    {\n      title: '',\n      key: 'action',\n      render: (text, record) => (\n        <Space size=\"middle\">\n          <DeleteAction\n            url={`/orders/${record.id}`}\n            onSuccess={fetchOrders}\n            successMessage=\"Заказ был успешно удалён\"\n            errorMessage=\"Не удалось удалить заказ\"\n          />\n          <Link to={`/orders/${record.id}/edit`}><Button\n            type=\"primary\" ghost\n            size=\"small\">Редактировать</Button></Link>\n          <Link to={`/orders/${record.id}`}><Button\n            size=\"small\">Детали</Button></Link>\n          {record.orderStatusId === 1 && !record.userId &&\n          <Button\n            size=\"small\"\n            type=\"primary\"\n            onClick={() => {\n              takeOrder(record.id);\n            }}\n          >\n            Принять\n          </Button>\n          }\n        </Space>\n      ),\n    },\n  ];\n\n  return (\n    <Table columns={columns} dataSource={orders} rowKey=\"id\" loading={loading} pagination={false}/>\n  )\n}\n\n\nexport default OrdersList","export const getOrdersParams = () => {\n  const value = localStorage.getItem(\"ordersParams\");\n  return value ? JSON.parse(value) : { page: 1, size: 10, filter: {}, order: '[[\"createdAt\", \"DESC\"]]' };\n}\n\nexport const setOrdersParams = (data) => {\n  localStorage.setItem(\"ordersParams\", JSON.stringify(data))\n}\n\nexport const getQuantityFromPacking = (packing) => {\n  if (!packing) return;\n  const value = typeof packing === \"string\" ? JSON.parse(packing) : packing;\n  return Object.keys(value).reduce((acc, key) => {\n    return acc + value[key] * Number(key);\n  }, 0);\n}","import React, { useCallback, useEffect, useState } from 'react';\nimport { Button, notification, Pagination, Select, Input } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport { debounce } from \"lodash-es\";\nimport OrdersList from \"./list/List\";\nimport request from \"../../../../utils/request\";\nimport { getOrdersParams, setOrdersParams } from \"../../../../utils/order\";\n\nconst Orders = () => {\n  const [loading, setLoading] = useState(false);\n  const [orders, setOrder] = useState([]);\n  const [params, setParams] = useState(getOrdersParams());\n\n  const [statuses, setStatuses] = useState([]);\n  const [statusesLoading, setStatusesLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [usersLoading, setUsersLoading] = useState(false);\n\n  const updateParams = (data) => {\n    setOrdersParams({ ...params, ...data });\n    setParams(prevParams => ({ ...prevParams, ...data }));\n  }\n\n  const updateFilter = debounce((data) => {\n    setOrdersParams({ ...params, page: 1, size: 10, filter: { ...params.filter, ...data } });\n    setParams(prevParams => ({ ...prevParams, page: 1, size: 10, filter: { ...prevParams.filter, ...data } }));\n  }, 500)\n\n  const fetchOrders = useCallback(() => {\n    setLoading(true);\n    request.get(\"/orders\", { params }).then(res => {\n      setOrder(res.data);\n    }).catch((e) => {\n      notification.error({ message: \"Не удалось загрузить заказы\" });\n    }).finally(() => {\n      setLoading(false);\n    })\n  }, [setLoading, setOrder, params])\n\n  useEffect(() => {\n    fetchOrders();\n  }, [fetchOrders])\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      fetchOrders();\n    }, 60000);\n\n    return () => {\n      clearInterval(interval)\n    }\n  }, [fetchOrders])\n\n  useEffect(() => {\n    setStatusesLoading(true);\n    request.get(\"/order_statuses\").then(res => {\n      setStatuses(res.data);\n    }).catch(() => {\n      notification.error({ message: \"Не удалось загрузить статусы\" })\n    }).finally(() => {\n      setStatusesLoading(false);\n    })\n\n    setUsersLoading(true);\n    request.get(\"/users\").then(res => {\n      setUsers(res.data);\n    }).catch(() => {\n      notification.error({ message: \"Не удалось загрузить юзеров\" })\n    }).finally(() => {\n      setUsersLoading(false);\n    })\n  }, [])\n\n  return (\n    <>\n      <div className=\"table-controls\">\n        <Link to=\"/orders/new\">\n          <Button className=\"green-button\" type=\"primary\">Создать</Button>\n        </Link>\n      </div>\n      <div className=\"table-filters\">\n        Сортировать:\n        <Select\n          style={{ width: 300 }}\n          allowClear\n          loading={usersLoading}\n          value={params.order}\n          onChange={value => updateParams({ order: value })}\n          defaultValue={'[[\"createdAt\", \"DESC\"]]'}\n        >\n          <Select.Option value={'[[\"createdAt\", \"DESC\"]]'}>по дате (сначала новые)</Select.Option>\n          <Select.Option value={'[[\"createdAt\", \"ASC\"]]'}>по дате (сначала старые)</Select.Option>\n        </Select>{\" \"}\n        <Select\n          placeholder=\"Статус\"\n          style={{ width: 300 }}\n          allowClear\n          loading={statusesLoading}\n          value={params.filter.orderStatusId}\n          onChange={value => updateFilter({ orderStatusId: value })}\n        >\n          {statuses.map(status => (\n            <Select.Option key={status.id} value={status.id}>{status.name}</Select.Option>\n          ))}\n        </Select>{\" \"}\n        <Select\n          placeholder=\"Ответственный\"\n          style={{ width: 300 }}\n          allowClear\n          value={params.filter.userId}\n          loading={usersLoading}\n          onChange={value => updateFilter({ userId: value })}\n        >\n          {users.map(user => (\n            <Select.Option\n              key={user.id}\n              value={user.id}>{user.fullName} {user.fullName && user.username ? \",\" : null} {user.username}\n            </Select.Option>\n          ))}\n          <Select.Option value={null}>Никто</Select.Option>\n        </Select>{\" \"}\n        <Input\n          style={{ width: 300 }}\n          onChange={e => updateFilter({ id: e.target.value || undefined })}\n          placeholder=\"Поиск по номеру заказа\"\n        />\n        <Button\n          onClick={() => {\n            updateParams({ page: 1, size: 10, filter: {}, order: '[[\"createdAt\", \"DESC\"]]' });\n          }}\n        >Сбросить фильтры</Button>\n      </div>\n      <OrdersList orders={orders.data} loading={loading} fetchOrders={fetchOrders}/>\n      <div className=\"pagination\">\n        <Pagination\n          showSizeChanger={false}\n          total={orders.totalItems}\n          current={params.page}\n          defaultPageSize={params.size}\n          onChange={page => {\n            updateParams({ page });\n          }}\n        />\n      </div>\n    </>\n  )\n}\n\n\nexport default Orders","export const USER_ROLES = {\n  admin: \"Администратор\",\n  manager: \"Менеджер\"\n}","import React, { useEffect, useState, useMemo, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Table, Tag, Space, Button } from 'antd';\nimport { Link } from 'react-router-dom';\nimport request from \"../../../../utils/request\";\nimport { selectUser } from \"../../../../config/authSlice\";\nimport \"./Users.css\";\nimport { USER_ROLES } from \"../../../../constants\";\nimport DeleteAction from \"../../../../components/delete-action/DeleteAction\";\n\nconst Users = () => {\n  const [loading, setLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n  const user = useSelector(selectUser);\n\n  const fetchUsers = useCallback(() => {\n    setLoading(true);\n    request.get(\"/users\").then(res => {\n      setUsers(res.data);\n    }).catch(err => {\n    }).finally(() => {\n      setLoading(false);\n    })\n  }, [setLoading, setUsers])\n\n  const columns = useMemo(() => [\n    {\n      title: 'Имя пользователя',\n      dataIndex: 'username',\n      key: 'username',\n    },\n    {\n      title: 'ФИО',\n      dataIndex: 'fullName',\n      key: 'fullName',\n    },\n    {\n      title: 'Email',\n      dataIndex: 'email',\n      key: 'email',\n    },\n    {\n      title: 'Роль',\n      dataIndex: ['role', 'name'],\n      key: 'role',\n      render: role => (\n        <Tag color={role === \"admin\" ? 'geekblue' : 'green'}>\n          {USER_ROLES[role]}\n        </Tag>\n      ),\n    },\n    {\n      title: '',\n      key: 'action',\n      render: (text, record) => (\n        <Space size=\"middle\">\n          <Link to={record.id === user.id ? \"/profile\" : `/users/${record.id}`}><Button\n            size=\"small\">Редактировать</Button></Link>\n          {record.id !== user.id &&\n            <DeleteAction\n              url={`/users/${record.id}`}\n              onSuccess={fetchUsers}\n              successMessage={`Пользователь ${record.username} был успешно удалён`}\n              errorMessage={\"Не удалось удалить пользователя\"}\n            />\n          }\n        </Space>\n      ),\n    },\n  ], [user, fetchUsers]);\n\n  useEffect(() => {\n    fetchUsers();\n  }, [fetchUsers])\n\n  return (\n    <>\n      <div className=\"table-controls\">\n        <Link to=\"/users/new\">\n          <Button className=\"green-button\" type=\"primary\">Добавить</Button>\n        </Link>\n      </div>\n      <Table columns={columns} dataSource={users} rowKey=\"id\" loading={loading} pagination={false} />\n    </>\n  )\n};\n\nexport default Users","import React, { useState } from 'react';\nimport {\n  Form,\n  Input,\n  Tooltip,\n  Select,\n  Button,\n  notification\n} from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport request from \"../../utils/request\";\nimport useAuth from \"../../hooks/useAuth\";\n\nconst { Option } = Select;\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 16,\n    },\n    sm: {\n      span: 8,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 16,\n    },\n    sm: {\n      span: 8,\n    },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nconst UserForm = ({ user = {}, onSuccess }) => {\n  const [form] = Form.useForm();\n  const [, , isAdmin] = useAuth();\n  const [loading, setLoading] = useState(false);\n\n  const [showPasswordFields, setShowPasswordFields] = useState(false);\n\n  const isEdit = !!(user.id);\n\n  const onFinish = (values) => {\n    setLoading(true);\n    const userData = {\n      username: values.username,\n      email: values.email,\n      fullName: values.fullName,\n    };\n\n    if (isEdit && showPasswordFields) {\n      userData.password = values.password\n    }\n\n    if (values.roleId) {\n      userData.roleId = Number(values.roleId);\n    }\n\n    (isEdit ? request.put(`/users/${user.id}`, userData) : request.post(\"/auth/signup\", {\n      ...userData,\n      password: values.password\n    }))\n      .then(\n        (response) => {\n          notification.success({\n            message: isEdit ?\n              `Данные пользователя ${response.data.username} были успешно обновлены` :\n              `Регистрация пользователя ${response.data.username} прошла успешно`\n          })\n          if (onSuccess) {\n            onSuccess(response.data);\n          }\n        },\n        () => {\n          notification.error({ message: \"Не удалось обновить данные пользователя\" });\n        }\n      ).finally(() => {\n      setLoading(false);\n    })\n  };\n\n  return (\n    <>\n      <Form\n        {...formItemLayout}\n        form={form}\n        name=\"user\"\n        onFinish={onFinish}\n        initialValues={isEdit ? {\n          ...user,\n          roleId: String(user.role.id)\n        } : { roleId: \"2\" }}\n        scrollToFirstError\n      >\n        <Form.Item\n          name=\"username\"\n          label={\n            <span>\n            Логин&nbsp;\n              <Tooltip title=\"Логин необходимый для входа\">\n              <QuestionCircleOutlined/>\n            </Tooltip>\n          </span>\n          }\n          rules={[\n            {\n              required: true,\n              message: 'Введите логин',\n              whitespace: true,\n            },\n          ]}\n        >\n          <Input/>\n        </Form.Item>\n        <Form.Item\n          name=\"email\"\n          label=\"E-mail\"\n          rules={[\n            {\n              type: 'email',\n              message: 'Неправильный E-mail',\n            },\n            {\n              required: true,\n              message: 'Ведите E-mail',\n            },\n          ]}\n        >\n          <Input/>\n        </Form.Item>\n        <Form.Item\n          name=\"fullName\"\n          label=\"ФИО\"\n          rules={[\n            {\n              required: true,\n              message: 'Введите ФИО',\n              whitespace: true,\n            },\n          ]}\n        >\n          <Input/>\n        </Form.Item>\n        {isAdmin &&\n        <Form.Item\n          name=\"roleId\"\n          label=\"Роль\"\n          rules={[\n            {\n              required: true,\n              message: 'Выберите роль!',\n            },\n          ]}\n        >\n          <Select>\n            <Option value=\"1\">Администратор</Option>\n            <Option value=\"2\">Менеджер</Option>\n          </Select>\n        </Form.Item>\n        }\n        {isEdit &&\n        <Form.Item {...tailFormItemLayout}>\n          <Button onClick={() => {\n            setShowPasswordFields(val => !val)\n          }}>\n            {showPasswordFields ? \"Отмена\" : \"Сменить пароль\"}\n          </Button>\n        </Form.Item>\n        }\n        {(!isEdit || showPasswordFields) &&\n        <>\n          <Form.Item\n            name=\"password\"\n            label=\"Новый пароль\"\n            rules={[\n              {\n                required: true,\n                message: 'Введите пароль',\n              },\n            ]}\n            hasFeedback\n          >\n            <Input.Password autoComplete=\"new-password\"/>\n          </Form.Item>\n          <Form.Item\n            name=\"confirm\"\n            label=\"Подтверждение пароля\"\n            dependencies={['password']}\n            hasFeedback\n            rules={[\n              {\n                required: true,\n                message: 'Подтвердите пароль',\n              },\n              ({ getFieldValue }) => ({\n                validator(rule, value) {\n                  if (!value || getFieldValue('password') === value) {\n                    return Promise.resolve();\n                  }\n\n                  return Promise.reject('Пароль должен совпадать');\n                },\n              }),\n            ]}\n          >\n            <Input.Password/>\n          </Form.Item>\n        </>\n        }\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n            {isEdit ? \"Сохранить\" : \"Создать\"}\n          </Button>\n        </Form.Item>\n      </Form>\n    </>\n  );\n};\n\nexport default UserForm;","import React from \"react\";\nimport UserForm from \"../../../../components/user-form/UserForm\";\nimport useAuth from \"../../../../hooks/useAuth\";\n\nconst Profile = () => {\n  const [user, updateUser] = useAuth();\n\n  return (\n    <UserForm\n      user={user}\n      onSuccess={res => {\n        updateUser(res);\n      }}\n    />\n  )\n}\n\nexport default Profile;","import React from \"react\";\nimport { Spin } from 'antd';\nimport './Spinner.css';\n\nconst Spinner = (props) => (\n  <div className=\"spinner\">\n    <Spin {...props} />\n  </div>\n)\n\nexport default Spinner","import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport UserForm from \"../../../../../components/user-form/UserForm\";\nimport request from \"../../../../../utils/request\";\nimport Spinner from \"../../../../../components/spinner/Spinner\";\n\nconst EditUser = () => {\n  const [user, setUser] = useState();\n  const { id } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    request.get(`/users/${id}`).then(res => {\n      setUser(res.data);\n    }).catch(err => {\n      console.log(err);\n    })\n  }, [setUser, id])\n\n  return (\n    user ?\n      <UserForm\n        user={user}\n        onSuccess={() => {\n          history.push(\"/users\");\n        }}\n      /> : <Spinner size=\"large\" />\n  )\n}\n\nexport default EditUser;","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport UserForm from \"../../../../../components/user-form/UserForm\";\n\nconst CreateUser = () => {\n  const history = useHistory();\n\n  return (\n    <UserForm\n      onSuccess={() => {\n        history.push(\"/users\");\n      }}\n    />\n  )\n}\n\nexport default CreateUser;","export const formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 16,\n    },\n    sm: {\n      span: 8,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 16,\n    },\n    sm: {\n      span: 8,\n    },\n  },\n};\nexport const tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n","import React, { useEffect, useRef } from 'react';\n\nconst useDidUpdateEffect = (fn, inputs) => {\n  const didMountRef = useRef(false);\n\n  useEffect(() => {\n    if (didMountRef.current)\n      fn();\n    else\n      didMountRef.current = true;\n  }, inputs);\n}\n\nexport default useDidUpdateEffect;","import React from 'react';\nimport {\n  InputNumber\n} from 'antd';\nimport { PlusOutlined, MinusOutlined } from '@ant-design/icons';\nimport useDidUpdateEffect from \"../../../../../../../../hooks/useDidUpdateEffect\";\nimport './Packing.css';\n\nconst PACKING = [1, 2, 5];\nconst PACKING_RASPBERRIES = [0.5];\n\nconst getPackingValue = (productId) => {\n  if (productId === 3) {\n    return { title: \"Фасовка: укажите кол-во ящиков объёмом 0.5 кг\", values: PACKING_RASPBERRIES };\n  }\n  return { title: \"Фасовка: укажите кол-во ящиков объёмами 1, 2 или 5 кг\", values: PACKING };\n}\n\nconst Packing = ({ value: formValue = \"{}\", onChange, productId }) => {\n  const value = (typeof formValue === \"string\" ? JSON.parse(formValue) : formValue) || {};\n  // const packingValue = getPackingValue(productId);\n  const packingValue = { title: 'Укажите количество единиц товара', values: [1] };\n\n  useDidUpdateEffect(() => {\n    onChange(\"{}\")\n  }, [productId])\n\n  return (\n    <>\n      <div className=\"packing-label\">{packingValue.title}</div>\n      <div className=\"packing-wrapper\">\n        {packingValue.values.map(packing =>\n          <div key={packing} className=\"packing-input-wrapper\">\n            <div className=\"packing-input\">\n              <MinusOutlined style={{ fontSize: 20 }} onClick={() => {\n                onChange(JSON.stringify({ ...value, [packing]: (value[packing] || 1) - 1 }))\n              }}/>\n              <InputNumber\n                keyboard={false}\n                onChange={(val) => {\n                  onChange(JSON.stringify({ ...value, [packing]: val }));\n                }}\n                value={value[packing] || 0}\n                min={0}\n              />\n              <PlusOutlined style={{ fontSize: 20 }} onClick={() => {\n                onChange(JSON.stringify({ ...value, [packing]: (value[packing] || 0) + 1 }))\n              }}/>\n            </div>\n          </div>)\n        }\n      </div>\n    </>\n  );\n};\n\nexport default Packing;","import React, { useEffect } from 'react';\nimport './Packing.css';\nimport { getQuantityFromPacking } from \"../../../../../../../../utils/order\";\n\nconst Quantity = ({ value, onChange, form, fieldName, products }) => {\n  const packing = form.getFieldValue([\"products\", fieldName, \"packing\"]);\n  const id = form.getFieldValue([\"products\", fieldName, \"id\"]);\n  const product = products.find((pr => pr.id === id)) || {};\n  const totalPrice = (product.price * value) || 0;\n\n  useEffect(() => {\n    onChange(getQuantityFromPacking(packing));\n  }, [packing])\n\n  return (\n    <div className=\"packing-quantity\">\n      {/* <div>Итого: {value || 0} кг</div> */}\n      <div>{totalPrice ? `${totalPrice} BYN` : null}</div>\n    </div>\n  );\n};\n\nexport default Quantity;","import React from 'react';\nimport {\n  Form,\n  Select,\n  Button,\n  Row,\n  Col,\n} from 'antd';\nimport { PlusOutlined, DeleteTwoTone } from '@ant-design/icons';\nimport { tailFormItemLayout } from \"../../../../../../../config/formLayout\";\nimport Packing from \"./components/Packing\";\nimport Quantity from \"./components/Quantity\";\n\nconst { Option } = Select;\n\nconst OrderForm = ({ form, products, productsLoading }) => {\n  return (\n    <Form.List name=\"products\">\n      {(fields, { add, remove }) => {\n        return (\n          <>\n            {fields.map(field => {\n              return (\n                <div className=\"product-item\" key={field.key}>\n                  <Row gutter={24} align=\"middle\">\n                    <Col xs={16}>\n                      <Form.Item\n                        noStyle\n                        shouldUpdate\n                      >\n                        {() => {\n                          const values = form.getFieldValue(\"products\") || [];\n                          const selectedIds = values.filter(val => val && val.id).map(val => val.id);\n                          const productId = form.getFieldValue([\"products\", field.key, \"id\"]);\n                          const product = products.find(pr => pr.id === productId);\n                          return (\n                            <>\n                              <Form.Item\n                                {...field}\n                                label=\"Товар\"\n                                name={[field.name, 'id']}\n                                fieldKey={[field.fieldKey, 'id']}\n                                rules={[{ required: true, message: 'Выберите товар' }]}\n                              >\n                                <Select disabled={productsLoading}>\n                                  {products.map(item => (\n                                    <Option disabled={selectedIds.includes(item.id)} key={item.id} value={item.id}>\n                                      {`${item.name} (${item.price} BYN за ${item.unit})`}\n                                    </Option>\n                                  ))}\n                                </Select>\n                              </Form.Item>\n                              {product && product.description && <i style={{ color: \"gray\" }}>{product.description}</i>}\n                            </>\n                          )\n                        }}\n                      </Form.Item>\n                    </Col>\n                    <Col xs={1}>\n                      <Button type=\"text\" danger onClick={() => remove(field.name)}>\n                        <DeleteTwoTone twoToneColor=\"red\"/>\n                        Удалить\n                      </Button>\n                    </Col>\n                  </Row>\n                  <Form.Item\n                    noStyle\n                    shouldUpdate\n                  >\n                    {() => {\n                      const productId = form.getFieldValue([\"products\", field.key, \"id\"]);\n                      return productId ? (\n                        <Row>\n                          <Form.Item\n                            {...field}\n                            name={[field.name, 'packing']}\n                            fieldKey={[field.fieldKey, 'packing']}\n                            label=\"Фасовка\"\n                            noStyle\n                          >\n                            <Packing productId={productId} />\n                          </Form.Item>\n                        </Row>) : null\n                    }}\n                  </Form.Item>\n                  <Row>\n                    <Form.Item shouldUpdate>\n                      {() => {\n                        return (\n                          <Form.Item\n                            {...field}\n                            name={[field.name, 'quantity']}\n                            fieldKey={[field.fieldKey, 'quantity']}\n                            noStyle\n                          >\n                            <Quantity form={form} fieldName={field.name} products={products}/>\n                          </Form.Item>\n                        );\n                      }}\n                    </Form.Item>\n                  </Row>\n                </div>\n              )\n            })}\n            {/* {fields.length < products.length && */}\n            <Form.Item {...tailFormItemLayout}>\n              <Button type=\"dashed\" onClick={() => add()} icon={<PlusOutlined/>}>\n                Добавить товар\n              </Button>\n            </Form.Item>\n            {/* } */}\n          </>\n        )\n      }}\n    </Form.List>\n  );\n};\n\nexport default OrderForm;","import React from 'react';\nimport {\n  Form,\n  Input,\n} from 'antd';\n\nconst CustomerFields = ({ validatePhone }) => {\n  return (\n    <>\n      <Form.Item\n        name={[\"customer\", \"name\"]}\n        label=\"Имя\"\n        rules={[\n          {\n            required: true,\n            message: 'Укажите имя',\n          },\n        ]}\n      >\n        <Input/>\n      </Form.Item>\n      <Form.Item\n        name={[\"customer\", \"phoneNumber\"]}\n        label=\"Контактный номер (мобильный)\"\n        rules={[\n          {\n            required: true,\n            message: 'Номер должен состоять из 9 следующих после кода',\n            ...(validatePhone ? { len: 9 } : {})\n          },\n        ]}\n        normalize={(val) => {\n          return val.replace(/\\D/g,'');\n        }}\n      >\n        <Input\n          addonBefore=\"+375\"\n          style={{\n            width: '100%',\n          }}\n        />\n      </Form.Item>\n      <Form.Item\n        name={[\"customer\", \"email\"]}\n        label=\"Email\"\n        rules={[\n          {\n            type: 'email',\n            message: 'Неправильный E-mail',\n          },\n          {\n            required: true,\n            message: 'Ведите E-mail',\n            whitespace: true,\n          },\n        ]}\n      >\n        <Input/>\n      </Form.Item>\n      {/*<Form.Item\n        name={[\"customer\", \"organizationName\"]}\n        label=\"Название организации\"\n        rules={[\n          {\n            required: true,\n            message: 'Ведите название организации',\n            whitespace: true,\n          },\n        ]}\n      >\n        <Input/>\n      </Form.Item>\n      <Form.Item\n        name={[\"customer\", \"address\"]}\n        label=\"Юридический адрес\"\n        rules={[\n          {\n            required: true,\n            message: 'Ведите юридический адрес',\n            whitespace: true,\n          },\n        ]}\n      >\n        <Input/>\n      </Form.Item>\n      <Form.Item\n        name={[\"customer\", \"bankAccountNumber\"]}\n        label={\n          <span>\n            Номер банковского счёта (IBAN)&nbsp;\n            <Tooltip title=\"Должен состоять только из 28 заглавных букв латинского алфавита и цифр\">\n              <QuestionCircleOutlined/>\n            </Tooltip>\n          </span>\n        }\n        normalize={(val) => {\n          return val.replace(/\\D/g,'');\n        }}\n        rules={[\n          {\n            required: true,\n            message: 'Должно быть 28 символов',\n            whitespace: true,\n            len: 28\n          },\n        ]}\n      >\n        <Input/>\n      </Form.Item>\n      <Form.Item\n        name={[\"customer\", \"bankName\"]}\n        label=\"Название банка\"\n        rules={[\n          {\n            required: true,\n            message: 'Ведите название банка',\n            whitespace: true,\n          },\n        ]}\n      >\n        <Input/>\n      </Form.Item>\n      <Form.Item\n        name={[\"customer\", \"payerAccountNumber\"]}\n        label=\"УНП\"\n        rules={[\n          {\n            required: true,\n            message: 'Ведите УНП (9 цифр)',\n            whitespace: true,\n            len: 9\n          },\n        ]}\n      >\n        <Input/>\n      </Form.Item>*/}\n    </>\n  );\n};\n\nexport default CustomerFields;","import React, { useEffect } from 'react';\nimport {\n  Form,\n  Select,\n} from 'antd';\n\nconst DeliveryMethod = ({ form }) => {\n  const productsValue = form.getFieldValue(\"products\") || [];\n  const deliveryMethodId = form.getFieldValue(\"deliveryMethodId\");\n  const totalQuantity = productsValue.reduce((result, val = {}) => {\n    return result + (val.quantity || 0);\n  }, 0)\n  const yandexDeliveryAvailable = totalQuantity >= 10;\n\n  useEffect(() => {\n    if (deliveryMethodId === 3 && !yandexDeliveryAvailable) {\n      form.setFieldsValue({ deliveryMethodId: 1 })\n    }\n  }, [deliveryMethodId, yandexDeliveryAvailable])\n\n  return (\n    <Form.Item\n      name=\"deliveryMethodId\"\n      label=\"Способ доставки\"\n      rules={[\n        {\n          required: true,\n          message: 'Укажите способ доставки',\n        },\n      ]}\n    >\n      <Select>\n        <Select.Option value={1}>Самовывоз (16:00-22:00 г. Минск, ул. Ильянская 4)</Select.Option>\n        {/* <Select.Option value={2}>Доставка по микрорайону Лебяжий 16:00-22:00 (бесплатно)</Select.Option> */}\n        <Select.Option\n          disabled={!yandexDeliveryAvailable}\n          value={3}\n        >\n          Яндекс доставка за счет продавца {!yandexDeliveryAvailable && \"(доступно при заказа от 10 кг)\"}\n        </Select.Option>\n      </Select>\n    </Form.Item>\n  )\n}\n\nexport default DeliveryMethod;","import React from 'react';\nimport moment from 'moment';\nimport {\n  Form,\n  Input,\n  Select,\n  DatePicker, Radio,\n} from 'antd';\nimport DeliveryMethod from \"./components/DeliveryMethod\";\n\nconst OrderFields = ({ form }) => {\n  return (\n    <>\n      <Form.Item\n        noStyle\n        shouldUpdate\n      >\n        {() => {\n          return (\n            <DeliveryMethod\n              form={form}\n            />\n          )\n        }}\n      </Form.Item>\n      <Form.Item dependencies={[\"deliveryMethodId\"]} noStyle>\n        {() => {\n          const deliveryMethodId = form.getFieldValue(\"deliveryMethodId\");\n          return (deliveryMethodId === 2 || deliveryMethodId === 3) &&\n            <Form.Item\n              name=\"deliveryAddress\"\n              label=\"Адрес доставки\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Введите адрес',\n                  whitespace: true,\n                },\n              ]}\n            >\n              <Input/>\n            </Form.Item>\n        }}\n      </Form.Item>\n      <Form.Item\n        name=\"deliveryDate\"\n        label=\"Дата доставки\"\n        rules={[\n          {\n            required: true,\n            message: 'Укажите дату доставки',\n          },\n        ]}\n      >\n        <DatePicker\n          format=\"DD.MM.YYYY\"\n          disabledDate={(current) => {\n            if (current) {\n              if (current.isBefore(moment(\"2022-07-05\"))) {\n                return true;\n              }\n              if (current.isSame(new Date(), \"day\")) {\n                return false;\n              }\n              return current < moment().endOf('day');\n            }\n            return false;\n          }}\n        />\n      </Form.Item>\n      <Form.Item\n        name=\"paymentMethod\"\n        label=\"Способ оплаты\"\n        rules={[\n          {\n            required: true,\n            message: 'Укажите способ оплаты',\n          },\n        ]}\n      >\n        <Radio.Group>\n          <Radio value=\"Наличные\">Наличные</Radio>\n          <Radio value=\"Карта\">Карта</Radio>\n        </Radio.Group>\n      </Form.Item>\n    </>\n  );\n};\n\nexport default OrderFields;","import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport {\n  Form,\n  Select,\n  Button,\n  Radio,\n  Row,\n  Col,\n  notification,\n  Input,\n  Spin\n} from 'antd';\nimport { debounce } from \"throttle-debounce\";\nimport request from \"../../../../../utils/request\";\nimport { Link } from \"react-router-dom\";\nimport useAuth from \"../../../../../hooks/useAuth\";\nimport Products from \"./components/products/Products\";\nimport CustomerFields from \"./components/customer-fields/CustomerFields\";\nimport OrderFields from \"./components/order-fields/OrderFields\";\n\nconst { Option } = Select;\n\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nconst OrderForm = ({ order = {}, onSuccess }) => {\n  const [form] = Form.useForm();\n  const [customers, setCustomers] = useState({ data: [] });\n  const [customersLoading, setCustomersLoading] = useState(false);\n  const [statuses, setStatuses] = useState([]);\n  const [statusesLoading, setStatusesLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [usersLoading, setUsersLoading] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [customerRadio, setCustomerRadio] = useState(1);\n  const [user] = useAuth();\n\n  const isEdit = !!(order.id);\n\n  const [products, setProducts] = useState([]);\n  const [productsLoading, setProductsLoading] = useState(false);\n\n  useEffect(() => {\n    setProductsLoading(true);\n    request.get(\"/products\").then(res => {\n      setProducts(res.data);\n    }).catch(() => {\n      notification.error({ message: \"Не удалось загрузить продукты\" })\n    }).finally(() => {\n      setProductsLoading(false);\n    })\n  }, [setProducts, setProductsLoading])\n\n  const fetchCustomers = (searchTerm = \"\") => {\n    setCustomersLoading(true);\n    request.get(\"/customers\", { params: { page: 1, size: 10, search: searchTerm } }).then(res => {\n      setCustomers(res.data);\n    }).catch(() => {\n      notification.error({ message: \"Не удалось загрузить заказчиков\" })\n    }).finally(() => {\n      setCustomersLoading(false);\n    })\n  }\n\n  useEffect(() => {\n    if (isEdit) {\n      form.resetFields()\n    }\n  }, [form, isEdit, order])\n\n  useEffect(() => {\n    fetchCustomers();\n\n    setStatusesLoading(true);\n    request.get(\"/order_statuses\").then(res => {\n      setStatuses(res.data);\n    }).catch(() => {\n      notification.error({ message: \"Не удалось загрузить статусы\" })\n    }).finally(() => {\n      setStatusesLoading(false);\n    })\n\n    setUsersLoading(true);\n    request.get(\"/users\").then(res => {\n      setUsers(res.data);\n    }).catch(() => {\n      notification.error({ message: \"Не удалось загрузить юзеров\" })\n    }).finally(() => {\n      setUsersLoading(false);\n    })\n  }, [setCustomers, setCustomersLoading])\n\n  const onCustomerRadioChange = e => {\n    setCustomerRadio(e.target.value);\n  };\n\n  const initialProducts = (order.products || []).map(product => ({\n    id: product.id,\n    quantity: product.order_product.quantity,\n    packing: product.order_product.packing\n  }));\n\n  const onFinish = (values) => {\n    const errors = [];\n\n    if (isEdit) {\n      const productsIds = values.products.map(pr => pr.id);\n      const deletedProducts = initialProducts.reduce((result, product) => {\n        if (!productsIds.includes(product.id)) {\n          result.push({ ...product, _destroy: true });\n        }\n        return result\n      }, []);\n      values.products = values.products.concat(deletedProducts);\n    }\n\n    if (!isEdit && (!values.products || !values.products.length)) {\n      errors.push(\"Не выбраны товары\")\n    } else if (values.products.some(product => !product.quantity)) {\n      errors.push(\"Не указано количество товара\")\n    }\n\n    if (errors.length) {\n      notification.error({ message: errors.join(\". \") })\n    } else {\n      setLoading(true);\n\n      (isEdit ? request.put(`/orders/${order.id}`, values) : request.post(\"/orders\", values))\n        .then(\n          (response) => {\n            notification.success({\n              message: isEdit ?\n                \"Изменения сохранены\" :\n                \"Заказ добавлен\"\n            })\n            if (onSuccess) {\n              onSuccess(response.data);\n            }\n          },\n          () => {\n            notification.error({ message: \"Не удалось сохранить данные заказа\" });\n          }\n        ).finally(() => {\n        setLoading(false);\n      })\n    }\n  };\n\n  return (\n    <>\n      {isEdit && <div className=\"table-controls\"><Link to={`/orders/${order.id}`}><Button\n        type=\"primary\">Просмотр</Button></Link></div>}\n      <Form\n        layout=\"vertical\"\n        form={form}\n        name=\"order\"\n        onFinish={onFinish}\n        initialValues={isEdit ? {\n          deliveryMethodId: order.deliveryMethodId,\n          deliveryAddress: order.deliveryAddress,\n          deliveryDate: moment(order.deliveryDate),\n          paymentMethod: order.paymentMethod,\n          deliveryTime: order.deliveryTime,\n          name: order.name,\n          notes: order.notes,\n          orderStatusId: order.orderStatusId,\n          userId: order.userId,\n          products: initialProducts,\n          totalAmount: String(order.totalAmount || order.products.reduce((result, val = {}) => {\n            return result + ((val.order_product.quantity * val.price) || 0);\n          }, 0)).replace(/\\.0+$/, ''),\n        } : {\n          deliveryMethodId: 1,\n          orderStatusId: 1,\n          paymentMethod: \"Наличные\",\n          products: [{ id: null, quantity: 1 }]\n        }}\n        scrollToFirstError\n        style={{ maxWidth: 750, margin: \"0 auto\" }}\n        onValuesChange={(newValues, allValues) => {\n          if (newValues.products && products.length) {\n            const totalPrice = allValues.products.reduce((result, val = {}) => {\n              const product = products.find((pr => pr.id === val.id)) || {};\n              return result + ((val.quantity * product.price) || 0);\n            }, 0)\n\n            form.setFieldsValue({ totalAmount: totalPrice });\n          }\n        }}\n      >\n        <Products form={form} products={products} productsLoading={productsLoading}/>\n        <div style={{ marginBottom: \"50px\" }}>\n          <OrderFields form={form}/>\n          <Form.Item\n            name=\"notes\"\n            label=\"Дополнительные условия и пожелания\"\n          >\n            <Input.TextArea/>\n          </Form.Item>\n          <Form.Item\n            name=\"orderStatusId\"\n            label=\"Статус\"\n            rules={[\n              {\n                required: true,\n                message: 'Укажите статус'\n              },\n            ]}\n          >\n            <Select loading={statusesLoading}>\n              {statuses.map(status =>\n                <Option\n                  key={status.id}\n                  value={status.id}>{status.name}\n                </Option>)}\n            </Select>\n          </Form.Item>\n          <Form.Item\n            shouldUpdate\n            label=\"Ответственный\"\n          >\n            {() => (\n              <Row gutter={24}>\n                <Col span={18}>\n                  <Form.Item\n                    name=\"userId\"\n                    noStyle\n                  >\n                    <Select loading={usersLoading}>\n                      {users.map(user =>\n                        <Option\n                          key={user.id}\n                          value={user.id}>{`${user.fullName || \"\"} ${user.email}, ${user.username}`}\n                        </Option>)}\n                    </Select>\n                  </Form.Item>\n                </Col>\n                {form.getFieldValue(\"userId\") === user.id ? null :\n                  <Col span={6}>\n                    <Button type=\"primary\" onClick={() => {\n                      form.setFieldsValue({ userId: user.id })\n                    }}>\n                      Назначить меня\n                    </Button>\n                  </Col>\n                }\n              </Row>\n            )}\n          </Form.Item>\n        </div>\n        {isEdit ? null :\n          <>\n            <Form.Item label=\"Заказчик\">\n              <Radio.Group onChange={onCustomerRadioChange} value={customerRadio}>\n                <Radio value={1}>Добавить нового заказчика</Radio>\n                <Radio value={2}>Выбрать существующего</Radio>\n              </Radio.Group>\n            </Form.Item>\n            {customerRadio === 1 ?\n              <CustomerFields/>\n              :\n              <Form.Item\n                name=\"customerId\"\n                label=\"Выберите\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Выберите заказчика'\n                  },\n                ]}\n              >\n                <Select\n                  showSearch\n                  loading={customersLoading}\n                  notFoundContent={customersLoading ? <Spin size=\"small\"/> : null}\n                  placeholder=\"Поиск\"\n                  onSearch={debounce(500, fetchCustomers)}\n                  filterOption={false}\n                >\n                  {customers.data.map(customer =>\n                    <Option\n                      key={customer.id}\n                      value={customer.id}>{`${customer.name}, ${customer.email}, ${customer.phoneNumber}`}\n                    </Option>)}\n                </Select>\n              </Form.Item>\n            }\n          </>\n        }\n        <Form.Item\n          name=\"totalAmount\"\n          label=\"К оплате (BYN)\"\n        >\n          <Input type=\"number\"/>\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n            {isEdit ? \"Сохранить\" : \"Создать\"}\n          </Button>\n        </Form.Item>\n      </Form>\n    </>\n  );\n};\n\nexport default OrderForm;","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport OrderForm from \"../form/Form\";\n\nconst CreateOrder = () => {\n  const history = useHistory();\n\n  return (\n    <OrderForm onSuccess={({ id }) => {\n      history.push(`/orders/${id}`);\n    }} />\n  )\n}\n\nexport default CreateOrder;","import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport request from \"../../../../../utils/request\";\nimport Spinner from \"../../../../../components/spinner/Spinner\";\nimport OrderForm from \"../form/Form\";\nimport { notification } from \"antd\";\n\nconst EditOrder = () => {\n  const [order, setOrder] = useState();\n  const { id } = useParams();\n  const history = useHistory();\n\n  const fetchOrder = () => {\n    request.get(`/orders/${id}`).then(res => {\n      if (order && JSON.stringify(order) !== JSON.stringify(res.data)) {\n        notification.warning({ message: \"Внимание! Этот заказ был изменён другим пользователем. Проверьте актуальность данных.\", duration: 0 })\n        setOrder(res.data);\n      }\n      if (!order) {\n        setOrder(res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    })\n  }\n\n  useEffect(() => {\n    fetchOrder();\n  }, [id])\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      fetchOrder();\n    }, 60000);\n\n    return () => {\n      clearInterval(interval)\n    }\n  }, [id, order])\n\n  return (\n    order ?\n      <OrderForm\n        order={order}\n        onSuccess={({ id }) => {\n          history.push(`/orders/${id}`);\n        }}\n      /> : <Spinner size=\"large\"/>\n  )\n}\n\nexport default EditOrder;","import React, { useState, useEffect, Fragment } from \"react\";\nimport { Descriptions, Button, notification } from \"antd\";\nimport { Link, useParams } from \"react-router-dom\";\nimport moment from \"moment\";\nimport request from \"../../../../../utils/request\";\nimport Spinner from \"../../../../../components/spinner/Spinner\";\nimport StatusTag from \"../../../../../components/status-tag/StatusTag\";\n\nconst ShowOrder = () => {\n  const [order, setOrder] = useState();\n  const { id } = useParams();\n\n  const fetchOrder = () => {\n    request.get(`/orders/${id}`).then(res => {\n      if (order && JSON.stringify(order) !== JSON.stringify(res.data)) {\n        notification.warning({\n          message: \"Внимание! Этот заказ был изменён другим пользователем. Проверьте актуальность данных.\",\n          duration: 0\n        })\n        setOrder(res.data);\n      }\n      if (!order) {\n        setOrder(res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    })\n  }\n\n  useEffect(() => {\n    fetchOrder();\n  }, [id])\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      fetchOrder();\n    }, 60000);\n\n    return () => {\n      clearInterval(interval)\n    }\n  }, [id, order])\n\n  return (\n    order ?\n      <Descriptions\n        bordered\n        title=\"Информация о заказе\"\n        extra={\n          <Link to={`/orders/${id}/edit`}><Button\n            type=\"primary\">Редактировать</Button></Link>}\n      >\n        <Descriptions.Item label=\"Номер заказа\">{order.id}</Descriptions.Item>\n        <Descriptions.Item label=\"Предмет заказа\">{(order.products || []).map(product => {\n          const packing = JSON.parse(product.order_product.packing || \"{}\");\n          return (\n            <Fragment key={product.id}>\n              {product.name}: {product.order_product.quantity.replace(/\\.0+$/,'')} x {product.unit}\n              {/* ({Object.keys(packing).map(key => packing[key] ?\n              <span key={key}>{key} × {product.unit}</span> : null)}) */}\n              <br/>\n            </Fragment>\n          )\n        })}</Descriptions.Item>\n        <Descriptions.Item label=\"К оплате\">\n          {\n            String(order.totalAmount || (order.products || []).reduce((result, product = {}) => {\n              return result + ((product.order_product.quantity * product.price) || 0);\n            }, 0)).replace(/\\.0+$/,'')\n          } BYN\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Способ доставки\">{order.deliveryMethod.name}</Descriptions.Item>\n        {order.deliveryMethod.id === 2 && order.deliveryAddress &&\n        <Descriptions.Item label=\"Адрес доставки\">{order.deliveryAddress}</Descriptions.Item>}\n        <Descriptions.Item\n          label=\"Время доставки\">{moment(order.deliveryDate).format(\"D MMMM YYYY\")}<br/>{order.deliveryTime}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Способ оплаты\">{order.paymentMethod}</Descriptions.Item>\n        <Descriptions.Item label=\"Статус\"><StatusTag {...order.orderStatus} /></Descriptions.Item>\n        <Descriptions.Item label=\"Ответственный\">\n          {order.user ?\n            <>\n              {order.user.fullName &&\n              <>\n                {order.user.fullName}\n                <br/>\n              </>\n              }\n              {order.user.username}\n              <br/>\n              {order.user.email}\n              <br/>\n            </> :\n            \"Не назначен\"\n          }\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Заказчик\">\n          <Link to={`/customers/${order.customer.id}`}>\n            {order.customer.name}\n            <br/>\n            {order.customer.email}\n            <br/>\n            {`+375${order.customer.phoneNumber}`}\n          </Link>\n        </Descriptions.Item>\n        {order.notes && <Descriptions.Item label=\"Доп. комментарии\">{order.notes}</Descriptions.Item>}\n        <Descriptions.Item label=\"Создан\">{moment(order.createdAt).format('D MMMM YYYY, HH:mm')}</Descriptions.Item>\n        <Descriptions.Item label=\"История\">\n          {order.orderStatusHistories.map(history => (\n            <Fragment key={history.id}>\n              <b>{history.statusName}:</b> {moment(history.createdAt).format('D MMMM YYYY, HH:mm')}\n              <br/>\n            </Fragment>\n          ))}\n        </Descriptions.Item>\n      </Descriptions> : <Spinner size=\"large\"/>\n  )\n}\n\nexport default ShowOrder;","import React, { useEffect, useState, useMemo, useCallback } from 'react';\nimport { Table, Space, Button, notification, Input, Pagination } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { debounce } from \"throttle-debounce\";\nimport request from \"../../../../utils/request\";\nimport DeleteAction from \"../../../../components/delete-action/DeleteAction\";\n\nconst Customers = () => {\n  const [loading, setLoading] = useState(false);\n  const [customers, setCustomers] = useState([]);\n  const [params, setParams] = useState({ page: 1, size: 10 });\n\n  const updateParams = (data) => {\n    setParams(prevParams => ({ ...prevParams, ...data }));\n  }\n\n  const fetchCustomers = useCallback(() => {\n    setLoading(true);\n    request.get(\"/customers\", { params }).then(res => {\n      setCustomers(res.data);\n    }).catch(() => {\n      notification.error({ message: \"Не удалось загрузить заказчиков\" })\n    }).finally(() => {\n      setLoading(false);\n    })\n  }, [setLoading, setCustomers, params])\n\n  const columns = useMemo(() => [\n    {\n      title: 'Имя',\n      dataIndex: 'name',\n    },\n    {\n      title: 'Email',\n      dataIndex: 'email',\n    },\n    {\n      title: 'Количество заказов',\n      dataIndex: [\"orders\", \"length\"],\n    },\n    {\n      title: '',\n      key: 'action',\n      render: (text, record) => (\n        <Space size=\"middle\">\n          <DeleteAction\n            url={`/customers/${record.id}`}\n            onSuccess={fetchCustomers}\n            successMessage=\"Заказчик был успешно удалён\"\n            errorMessage=\"Не удалось удалить заказчика\"\n          />\n          <Link to={`/customers/${record.id}/edit`}><Button\n            size=\"small\">Редактировать</Button></Link>\n          <Link to={`/customers/${record.id}`}><Button\n            size=\"small\">Детали</Button></Link>\n        </Space>\n      ),\n    },\n  ], [fetchCustomers]);\n\n  useEffect(() => {\n    fetchCustomers();\n  }, [fetchCustomers])\n\n  const search = debounce(500, function (e) {\n    updateParams({ search: e.target.value, page: 1, size: 10 })\n  })\n\n  return (\n    <>\n      <div className=\"table-controls\">\n        <Link to=\"/customers/new\">\n          <Button className=\"green-button\" type=\"primary\">Добавить</Button>\n        </Link>\n      </div>\n      <div className=\"table-filters\">\n        <Input\n          style={{ width: 300 }}\n          onChange={search}\n          placeholder=\"Поиск\"\n        />\n      </div>\n      <Table columns={columns} dataSource={customers.data} rowKey=\"id\" loading={loading} pagination={false}/>\n      <div className=\"pagination\">\n        <Pagination\n          showSizeChanger={false}\n          total={customers.totalItems}\n          current={params.page}\n          defaultPageSize={params.size}\n          onChange={page => {\n            updateParams({ page });\n          }}\n        />\n      </div>\n    </>\n  )\n};\n\nexport default Customers","import React, { useState, useEffect, useCallback } from \"react\";\nimport { Descriptions, Button } from \"antd\";\nimport { Link, useParams } from \"react-router-dom\";\nimport request from \"../../../../../utils/request\";\nimport Spinner from \"../../../../../components/spinner/Spinner\";\nimport OrdersList from \"../../orders/list/List\";\n\nconst ShowCustomer = () => {\n  const [customer, setCustomer] = useState();\n  const { id } = useParams();\n\n  const fetchCustomer = useCallback(() => {\n    request.get(`/customers/${id}`).then(res => {\n      setCustomer(res.data);\n    }).catch(err => {\n      console.log(err);\n    })\n  }, [id, setCustomer])\n\n  useEffect(() => {\n    fetchCustomer();\n  }, [fetchCustomer])\n\n  return (\n    customer ?\n      <>\n        <div style={{ marginBottom: 40 }}>\n          <Descriptions\n            bordered\n            title=\"Информация о заказчике\"\n            extra={\n              <Link to={`/customers/${id}/edit`}><Button\n                type=\"primary\">Редактировать</Button></Link>}\n          >\n            <Descriptions.Item label=\"Имя\">{customer.name}</Descriptions.Item>\n            <Descriptions.Item label=\"Email\">{customer.email}</Descriptions.Item>\n            <Descriptions.Item label=\"Телефон\">+375{customer.phoneNumber}</Descriptions.Item>\n          </Descriptions>\n        </div>\n        <h2>Заказы</h2>\n        <OrdersList orders={customer.orders} showCustomer={false} loading={false} fetchOrders={fetchCustomer} />\n      </>\n      : <Spinner size=\"large\"/>\n  )\n}\n\nexport default ShowCustomer;","import React, { useState } from 'react';\nimport {\n  Form,\n  Input,\n  Button,\n  notification\n} from 'antd';\nimport request from \"../../../../../utils/request\";\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 16,\n    },\n    sm: {\n      span: 8,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 16,\n    },\n    sm: {\n      span: 8,\n    },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nconst CustomerForm = ({ customer = {}, onSuccess }) => {\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const isEdit = !!(customer.id);\n\n  const onFinish = (values) => {\n    setLoading(true);\n    (isEdit ? request.put(`/customers/${customer.id}`, values) : request.post(\"/customers\", values))\n      .then(\n        (response) => {\n          notification.success({\n            message: isEdit ?\n              `Данные заказчика ${response.data.organizationName} были успешно обновлены` :\n              `Добавление заказчика ${response.data.organizationName} прошла успешно`\n          })\n          if (onSuccess) {\n            onSuccess(response.data);\n          }\n        },\n        () => {\n          notification.error({ message: \"Не удалось обновить данные заказчика\" });\n        }\n      ).finally(() => {\n      setLoading(false);\n    })\n  };\n\n  return (\n    <>\n      <Form\n        {...formItemLayout}\n        form={form}\n        name=\"customer\"\n        onFinish={onFinish}\n        initialValues={isEdit ? {\n          email: customer.email,\n          organizationName: customer.organizationName,\n          address: customer.address,\n          bankAccountNumber: customer.bankAccountNumber,\n          bankName: customer.bankName,\n          payerAccountNumber: customer.payerAccountNumber,\n        } : {}}\n        scrollToFirstError\n      >\n        <Form.Item\n          name=\"email\"\n          label=\"Email\"\n          rules={[\n            {\n              type: 'email',\n              message: 'Неправильный E-mail',\n            },\n            {\n              required: true,\n              message: 'Ведите E-mail',\n              whitespace: true,\n            },\n          ]}\n        >\n          <Input/>\n        </Form.Item>\n        <Form.Item\n          name=\"organizationName\"\n          label=\"Название организации\"\n          rules={[\n            {\n              required: true,\n              message: 'Ведите название организации',\n              whitespace: true,\n            },\n          ]}\n        >\n          <Input/>\n        </Form.Item>\n        <Form.Item\n          name=\"address\"\n          label=\"Юридический адрес\"\n          rules={[\n            {\n              required: true,\n              message: 'Ведите юридический адрес',\n              whitespace: true,\n            },\n          ]}\n        >\n          <Input/>\n        </Form.Item>\n        <Form.Item\n          name=\"bankAccountNumber\"\n          label=\"Номер банковского счёта\"\n          rules={[\n            {\n              required: true,\n              message: 'Ведите номер банковского счёта',\n              whitespace: true,\n            },\n          ]}\n        >\n          <Input/>\n        </Form.Item>\n        <Form.Item\n          name=\"bankName\"\n          label=\"Название банка\"\n          rules={[\n            {\n              required: true,\n              message: 'Ведите название банка',\n              whitespace: true,\n            },\n          ]}\n        >\n          <Input/>\n        </Form.Item>\n        <Form.Item\n          name=\"payerAccountNumber\"\n          label=\"УНП\"\n          rules={[\n            {\n              required: true,\n              message: 'Ведите УНП (9 цифр)',\n              // whitespace: true,\n              // len: 9\n            },\n          ]}\n        >\n          <Input/>\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n            {isEdit ? \"Сохранить\" : \"Создать\"}\n          </Button>\n        </Form.Item>\n      </Form>\n    </>\n  );\n};\n\nexport default CustomerForm;","import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport request from \"../../../../../utils/request\";\nimport Spinner from \"../../../../../components/spinner/Spinner\";\nimport CustomerForm from \"../form/Form\";\n\nconst EditCustomer = () => {\n  const [customer, setCustomer] = useState();\n  const { id } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    request.get(`/customers/${id}`).then(res => {\n      setCustomer(res.data);\n    }).catch(err => {\n      console.log(err);\n    })\n  }, [id])\n\n  return (\n    customer ?\n      <CustomerForm\n        customer={customer}\n        onSuccess={({ id }) => {\n          history.push(`/customers/${id}`);\n        }}\n      /> : <Spinner size=\"large\" />\n  )\n}\n\nexport default EditCustomer;","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport CustomerForm from \"../form/Form\";\n\nconst CreateCustomer = () => {\n  const history = useHistory();\n\n  return (\n    <CustomerForm onSuccess={({ id }) => {\n      history.push(`/customers/${id}`);\n    }}/>\n  )\n}\n\nexport default CreateCustomer;","import React, { useEffect, useState, useMemo, useCallback } from 'react';\nimport { Table, Space, Button, notification } from 'antd';\nimport { Link } from 'react-router-dom';\nimport request from \"../../../../utils/request\";\nimport DeleteAction from \"../../../../components/delete-action/DeleteAction\";\n\nconst Products = () => {\n  const [loading, setLoading] = useState(false);\n  const [products, setProducts] = useState([]);\n\n  const fetchProducts = useCallback(() => {\n    setLoading(true);\n    request.get(\"/products\").then(res => {\n      setProducts(res.data);\n    }).catch(() => {\n      notification.error({ message: \"Не удалось загрузить товары\" })\n    }).finally(() => {\n      setLoading(false);\n    })\n  }, [setLoading, setProducts])\n\n  const columns = useMemo(() => [\n    {\n      title: 'Наименование',\n      dataIndex: 'name',\n    },\n    {\n      title: 'Единица',\n      dataIndex: 'unit',\n    },\n    {\n      title: 'Вес единицы',\n      dataIndex: 'unitWeight',\n    },\n    {\n      title: 'Цена за единицу (руб)',\n      dataIndex: 'price',\n    },\n    {\n      title: 'Описание',\n      dataIndex: 'description',\n    },\n    {\n      title: '',\n      key: 'action',\n      render: (text, record) => (\n        <Space size=\"middle\">\n          <DeleteAction\n            url={`/products/${record.id}`}\n            onSuccess={fetchProducts}\n            successMessage=\"Товар был успешно удалён\"\n            errorMessage=\"Не удалось удалить товар\"\n          />\n          <Link to={`/products/${record.id}/edit`}><Button\n            size=\"small\">Редактировать</Button></Link>\n        </Space>\n      ),\n    },\n  ], [fetchProducts]);\n\n  useEffect(() => {\n    fetchProducts();\n  }, [fetchProducts])\n\n  return (\n    <>\n      <div className=\"table-controls\">\n        <Link to=\"/products/new\">\n          <Button className=\"green-button\" type=\"primary\">Добавить</Button>\n        </Link>\n      </div>\n      <Table columns={columns} dataSource={products} rowKey=\"id\" loading={loading} pagination={false} />\n    </>\n  )\n};\n\nexport default Products","import React, { useState } from 'react';\nimport {\n  Form,\n  Input,\n  Button,\n  InputNumber,\n  notification\n} from 'antd';\nimport request from \"../../../../../utils/request\";\nimport { formItemLayout, tailFormItemLayout } from \"../../../../../config/formLayout\";\n\nconst ProductForm = ({ product = {}, onSuccess }) => {\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const isEdit = !!(product.id);\n\n  const onFinish = (values) => {\n    setLoading(true);\n    (isEdit ? request.put(`/products/${product.id}`, values) : request.post(\"/products\", values))\n      .then(\n        (response) => {\n          notification.success({\n            message: isEdit ?\n              `Данные товара ${response.data.name} были успешно обновлены` :\n              `Добавление товара ${response.data.name} прошла успешно`\n          })\n          if (onSuccess) {\n            onSuccess(response.data);\n          }\n        },\n        () => {\n          notification.error({ message: \"Не удалось обновить данные товара\" });\n        }\n      ).finally(() => {\n      setLoading(false);\n    })\n  };\n\n  return (\n    <>\n      <Form\n        {...formItemLayout}\n        form={form}\n        name=\"product\"\n        onFinish={onFinish}\n        initialValues={isEdit ? {\n          name: product.name,\n          description: product.description,\n        } : {}}\n        scrollToFirstError\n      >\n        <Form.Item\n          name=\"name\"\n          label=\"Наименование\"\n          rules={[\n            {\n              required: true,\n              message: 'Ведите наименование',\n              whitespace: true,\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          name=\"unit\"\n          label=\"Единица\"\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          name=\"unitWeight\"\n          label=\"Вес единицы (кг)\"\n        >\n          <Input type=\"number\" />\n        </Form.Item>\n        <Form.Item\n          name=\"price\"\n          label=\"Цена за единицу (руб)\"\n        >\n          <Input type=\"number\" />\n        </Form.Item>\n        <Form.Item\n          name=\"description\"\n          label=\"Описание\"\n        >\n          <Input.TextArea />\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n            {isEdit ? \"Сохранить\" : \"Создать\"}\n          </Button>\n        </Form.Item>\n      </Form>\n    </>\n  );\n};\n\nexport default ProductForm;","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ProductForm from \"../form/Form\";\n\nconst CreateProduct = () => {\n  const history = useHistory();\n\n  return (\n    <ProductForm onSuccess={() => {\n      history.push(\"/products\");\n    }}/>\n  )\n}\n\nexport default CreateProduct;","import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport request from \"../../../../../utils/request\";\nimport Spinner from \"../../../../../components/spinner/Spinner\";\nimport ProductForm from \"../form/Form\";\n\nconst EditProduct = () => {\n  const [product, setProduct] = useState();\n  const { id } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    request.get(`/products/${id}`).then(res => {\n      setProduct(res.data);\n    }).catch(err => {\n      console.log(err);\n    })\n  }, [id])\n\n  return (\n    product ?\n      <ProductForm\n        product={product}\n        onSuccess={() => {\n          history.push(\"/products\");\n        }}\n      /> : <Spinner size=\"large\" />\n  )\n}\n\nexport default EditProduct;","const getCurDateISO = () => new Date(new Date().getTime() - new Date().getTimezoneOffset() * 60 * 1000).toISOString().split('T').shift();\n\nexport default getCurDateISO;\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport { DatePicker, Descriptions } from \"antd\";\nimport { Pie } from '@ant-design/charts';\nimport { groupBy } from 'lodash-es';\nimport request from \"../../../../utils/request\";\nimport getCurDateISO from \"../../../../utils/getCurDateISO\";\nimport moment from 'moment';\n\nconst getInitCreatedAt = () => {\n  const lastSavedCreatedAtStart = localStorage.getItem('stats:createdAtStart');\n\n  return lastSavedCreatedAtStart ? JSON.stringify([lastSavedCreatedAtStart, getCurDateISO()]) : null;\n};\n\nconst getDateRangePickerValue = strRange => {\n  if (!strRange) {\n    return null;\n  }\n\n  const [startDate, endDate] = JSON.parse(strRange);\n\n  if (!startDate || !endDate) {\n    return null;\n  }\n\n  return [moment(startDate), moment(endDate)];\n};\n\nconst Statistics = () => {\n  const [orders, setOrders] = useState({ data: [] });\n  const [loading, setLoading] = useState();\n  const [params, setParams] = useState({\n    page: 1,\n    size: 10000,\n    createdAt: getInitCreatedAt(),\n  });\n\n  useEffect(() => {\n    if (params.createdAt) {\n      const [startDate] = JSON.parse(params.createdAt);\n\n      if (startDate) {\n        localStorage.setItem('stats:createdAtStart', startDate);\n      }\n    }\n  }, [params.createdAt]);\n\n  const products = orders.data.reduce((acc, order) => {\n    return acc.concat(order.products.map(prod => ({\n      ...prod,\n      orderStatusId: order.orderStatusId,\n      orderStatusName: order.orderStatus.name\n    })));\n  }, [])\n\n  const productsByName = groupBy(products, \"name\");\n  const ordersByStatus = groupBy(orders.data, \"orderStatus.name\");\n\n  let totalMoney = 0;\n\n  const moneyData = Object.keys(ordersByStatus).map(status => {\n    const orders = ordersByStatus[status];\n    const money = orders.reduce((moneyResult, order) => {\n      const amount = order.totalAmount || order.products.reduce((acc, item) => {\n        acc += Number(item.order_product.quantity) * Number(item.price);\n        return acc;\n      }, 0);\n      return moneyResult + Number(amount);\n    }, 0)\n\n    totalMoney += money;\n\n    const currentProducts = orders.reduce((acc, order) => {\n      return acc.concat(order.products.map(prod => ({\n        ...prod,\n        orderStatusId: order.orderStatusId,\n        orderStatusName: order.orderStatus.name\n      })));\n    }, [])\n    const productsByName = groupBy(currentProducts, \"name\");\n    const productsQuantity = Object.keys(productsByName).map(key => {\n      const value = productsByName[key].reduce((acc, item) => {\n        acc += Number(item.order_product.quantity * (item.unitWeight || 1));\n        return acc\n      }, 0);\n\n      return ({\n        type: key,\n        value: value\n      })\n    });\n\n    return {\n      status,\n      money,\n      quantity: productsQuantity,\n    }\n  });\n\n  const data = Object.keys(productsByName).map(key => {\n    const value = productsByName[key].reduce((acc, item) => {\n      acc.all += Number(item.order_product.quantity * (item.unitWeight || 1));\n      if (item.orderStatusId === 1) {\n        acc.raw += Number(item.order_product.quantity * (item.unitWeight || 1));\n      }\n      return acc\n    }, { all: 0, raw: 0 });\n\n    return ({\n      type: key,\n      // label: `${value.all}кг (${value.raw}кг не обработано)`,\n      value: value.all\n    })\n  });\n\n  const totalProducts = data.reduce((acc, item) => {\n    return acc + Number(item.value)\n  }, 0)\n\n  const config = {\n    appendPadding: 10,\n    data,\n    angleField: 'value',\n    colorField: 'type',\n    radius: 1,\n    innerRadius: 0.6,\n    label: {\n      autoRotate: false,\n      type: 'inner',\n      offset: '-50%',\n      content: '{value}',\n      style: {\n        textAlign: 'center',\n        fontSize: 17,\n      },\n    },\n    statistic: {\n      title: false,\n      content: {\n        style: {\n          whiteSpace: 'pre-wrap',\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n        },\n        formatter: () => `Всего ${totalProducts}`,\n      },\n    },\n  };\n\n  const updateParams = (data) => {\n    setParams(prevParams => ({ ...prevParams, ...data }));\n  }\n\n  useEffect(() => {\n    setLoading(true);\n    request.get(\"/orders\", {\n      params\n    }).then(res => {\n      setOrders(res.data);\n    }).catch(() => {\n    }).finally(() => {\n      setLoading(false);\n    })\n  }, [params])\n\n  return (\n    <>\n      <DatePicker.RangePicker\n        style={{ marginBottom: \"50px\", width: 300 }}\n        value={getDateRangePickerValue(params.createdAt)}\n        onChange={(value, str) => {\n          updateParams({ createdAt: JSON.stringify(str) })\n        }}\n      />\n      <Descriptions\n        title=\"Сумма по статусам (BYN)\"\n        bordered\n        layout=\"vertical\"\n        style={{ marginBottom: 50 }}\n      >\n        {moneyData.map(item => (\n          <Descriptions.Item key={item.status} label={item.status}>\n            {item.quantity.map(prod => <Fragment key={prod.type}><b>{prod.type}:</b> {prod.value} кг<br/></Fragment>)}\n            {item.money} BYN\n          </Descriptions.Item>\n        ))}\n        <Descriptions.Item label=\"Всего\">\n          {data.map(prod => <Fragment key={prod.type}><b>{prod.type}:</b> {prod.value} кг<br/></Fragment>)}\n          {totalMoney} BYN\n        </Descriptions.Item>\n      </Descriptions>\n      <Pie {...config} loading={loading}/>\n    </>\n  )\n}\n\nexport default Statistics;","import React, { useMemo } from 'react';\nimport { Layout, Menu } from 'antd';\nimport { TeamOutlined, MailOutlined, UserOutlined, IdcardFilled, DatabaseOutlined, LineChartOutlined } from '@ant-design/icons';\nimport {\n  Switch,\n  Route,\n  Link,\n  useLocation\n} from \"react-router-dom\";\nimport useAuth from \"../../hooks/useAuth\";\nimport Header from './components/header/Header';\nimport Orders from './components/orders/Orders';\nimport Users from './components/users/Users';\nimport Profile from \"./components/profile/Profile\";\nimport EditUser from \"./components/users/edit/Edit\";\nimport CreateUser from \"./components/users/create/Create\";\nimport CreateOrder from \"./components/orders/create/Create\";\nimport EditOrder from \"./components/orders/edit/Edit\";\nimport ShowOrder from \"./components/orders/show/Show\";\nimport Customers from \"./components/customers/Customers\";\nimport ShowCustomer from \"./components/customers/show/Show\";\nimport EditCustomer from \"./components/customers/edit/Edit\";\nimport CreateCustomer from \"./components/customers/create/Create\";\nimport Products from \"./components/products/Products\";\nimport CreateProduct from \"./components/products/create/Create\";\nimport EditProduct from \"./components/products/edit/Edit\";\nimport Statistics from \"./components/statistics/Statistics\";\n\nconst { Content, Sider } = Layout;\n\nconst routes = [\n  { path: \"/\", component: <Orders/> },\n  { path: \"/orders/new\", component: <CreateOrder/> },\n  { path: \"/orders/:id/edit\", component: <EditOrder/> },\n  { path: \"/orders/:id\", component: <ShowOrder/> },\n  { path: \"/users\", component: <Users/> },\n  { path: \"/users/new\", component: <CreateUser/> },\n  { path: \"/users/:id\", component: <EditUser/> },\n  { path: \"/customers\", component: <Customers/> },\n  { path: \"/customers/new\", component: <CreateCustomer/> },\n  { path: \"/customers/:id\", component: <ShowCustomer/> },\n  { path: \"/customers/:id/edit\", component: <EditCustomer/> },\n  { path: \"/products\", component: <Products/> },\n  { path: \"/products/new\", component: <CreateProduct/> },\n  { path: \"/products/:id/edit\", component: <EditProduct/> },\n  { path: \"/profile\", component: <Profile/> },\n  { path: \"/statistics\", component: <Statistics/> },\n]\n\nconst Admin = () => {\n  const [, , isAdmin] = useAuth();\n  const location = useLocation();\n\n  const selectedMenuItem = useMemo(() => {\n    if (location.pathname.match(\"/users\")) {\n      return \"users\"\n    }\n    if (location.pathname.match(\"/customers\")) {\n      return \"customers\"\n    }\n    if (location.pathname.match(\"/products\")) {\n      return \"products\"\n    }\n    if (location.pathname.match(\"/profile\")) {\n      return \"profile\"\n    }\n    if (location.pathname.match(\"/statistics\")) {\n      return \"statistics\"\n    }\n    return \"orders\";\n  }, [location.pathname]);\n\n  return (\n    <Layout>\n      <Sider\n        breakpoint=\"lg\"\n        collapsedWidth=\"0\"\n      >\n        <div className=\"logo\">Berrymore Admin</div>\n        <Menu theme=\"dark\" mode=\"inline\" selectedKeys={[selectedMenuItem]}>\n          <Menu.Item key=\"orders\" icon={<MailOutlined/>}>\n            <Link to=\"/\">Заказы</Link>\n          </Menu.Item>\n          {isAdmin &&\n          <Menu.Item key=\"users\" icon={<TeamOutlined/>}>\n            <Link to=\"/users\">Пользователи</Link>\n          </Menu.Item>\n          }\n          <Menu.Item key=\"customers\" icon={<IdcardFilled/>}>\n            <Link to=\"/customers\">Заказчики</Link>\n          </Menu.Item>\n          <Menu.Item key=\"products\" icon={<DatabaseOutlined/>}>\n            <Link to=\"/products\">Товары</Link>\n          </Menu.Item>\n          <Menu.Item key=\"profile\" icon={<UserOutlined/>}>\n            <Link to=\"/profile\">Профиль</Link>\n          </Menu.Item>\n          {isAdmin &&\n          <Menu.Item key=\"statistics\" icon={<LineChartOutlined />}>\n            <Link to=\"/statistics\">Статистика</Link>\n          </Menu.Item>\n          }\n        </Menu>\n      </Sider>\n      <Layout>\n        <Header/>\n        <Content style={{ margin: '24px 16px 0' }}>\n          <div className=\"site-layout-background\" style={{ padding: 24 }}>\n            {isAdmin ?\n              <Switch>\n                {routes.map(route => (\n                  <Route key={route.path} exact path={route.path}>\n                    {route.component}\n                  </Route>\n                ))}\n              </Switch>\n              :\n              <Switch>\n                {routes.filter(route => (!route.path.match(\"/users\") || !route.path.match(\"/statistics\"))).map(route => (\n                  <Route key={route.path} exact path={route.path}>\n                    {route.component}\n                  </Route>\n                ))}\n              </Switch>\n            }\n          </div>\n        </Content>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Admin;","import React, { useState } from 'react';\nimport { Form, Input, Button, notification } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport './Login.css';\nimport request from \"../../utils/request\";\nimport useAuth from \"../../hooks/useAuth\";\n\nconst Login = () => {\n  const [, updateUser] = useAuth();\n  const [loading, setLoading] = useState(false);\n\n  const onFinish = values => {\n    setLoading(true);\n    request\n      .post(\"/auth/signin\", {\n        username: values.username,\n        password: values.password,\n      })\n      .then((response) => {\n        if (response.data.accessToken) {\n          localStorage.setItem(\"token\", response.data.accessToken);\n        }\n        updateUser(response.data);\n      }).catch(() => {\n      notification.error({ message: \"Не удалось выполнить вход\" })\n    }).finally(() => {\n      setLoading(false);\n    })\n  };\n\n  return (\n    <div className=\"login-form-wrapper\">\n      <div className=\"login-form-container\">\n        <Form\n          name=\"normal_login\"\n          className=\"login-form\"\n          initialValues={{ remember: true }}\n          onFinish={onFinish}\n        >\n          <Form.Item\n            name=\"username\"\n            rules={[{ required: true, message: 'Введите логин' }]}\n          >\n            <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>} placeholder=\"Логин\"/>\n          </Form.Item>\n          <Form.Item\n            name=\"password\"\n            rules={[{ required: true, message: 'Введите пароль' }]}\n          >\n            <Input.Password\n              prefix={<LockOutlined className=\"site-form-item-icon\"/>}\n              type=\"password\"\n              placeholder=\"Пароль\"\n            />\n          </Form.Item>\n          <Form.Item>\n            <Button loading={loading} type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n              Войти\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login","import React, { useEffect, useState } from 'react';\nimport {\n  Form,\n  Button,\n  notification, Input\n} from 'antd';\nimport request from \"../../utils/request\";\nimport Products from \"../admin/components/orders/form/components/products/Products\";\nimport OrderFields from \"../admin/components/orders/form/components/order-fields/OrderFields\";\nimport CustomerFields from \"../admin/components/orders/form/components/customer-fields/CustomerFields\";\n\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 10,\n    },\n  },\n};\n\nconst OrderForm = () => {\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [products, setProducts] = useState([]);\n  const [productsLoading, setProductsLoading] = useState(false);\n\n  useEffect(() => {\n    setProductsLoading(true);\n    request.get(\"/products\").then(res => {\n      setProducts(res.data);\n    }).catch(() => {\n      notification.error({ message: \"Не удалось загрузить продукты\" })\n    }).finally(() => {\n      setProductsLoading(false);\n    })\n  }, [setProducts, setProductsLoading])\n\n  const onFinish = (values) => {\n    const errors = [];\n\n    if (!values.products || !values.products.length) {\n      errors.push(\"Не выбраны товары\")\n    } else if (values.products.some(product => !product.quantity)) {\n      errors.push(\"Не указано количество товара\")\n    }\n\n    const totalQuantity = values.products.reduce((result, val = {}) => {\n      return result + (val.quantity || 0);\n    }, 0)\n\n    if (totalQuantity < 10 && values.deliveryMethodId === 3) {\n      errors.push(\"Яндекс доставка доступна только при заказе от 10 кг\")\n    }\n\n    if (errors.length) {\n      notification.error({ message: errors.join(\". \") })\n    } else {\n      setLoading(true);\n\n      request.post(\"/orders\", values)\n        .then(\n          () => {\n            notification.success({\n              message: \"Заказ отправлен\"\n            })\n            setSuccess(true);\n          },\n          () => {\n            notification.error({ message: \"Не удалось отправить заказ\" });\n          }\n        ).finally(() => {\n        setLoading(false);\n      })\n    }\n  };\n\n  return success ?\n    <div style={{ maxWidth: 750, margin: \"50px auto 30px auto\", padding: \"20px\" }}>\n      <h1>Ваш заказ отправлен!</h1>\n      <h3>Мы свяжемся с вами как только сможем. Спасибо что выбрали нас!</h3>\n      <a href=\"http://berrymore.by\">\n        <Button size=\"large\">Вернуться на сайт</Button>\n      </a>\n    </div> :\n    <div className=\"order-form\">\n      <div style={{ maxWidth: 750, margin: \"50px auto 30px auto\" }}>\n        <h3>Пожалуйста, выберите интересующие вас товары, заполните все\n          поля помеченные <span style={{ color: \"red\" }}>*</span> и\n          нажмите кнопку <b>Отправить</b>. Позже мы свяжемся с вами по указанным контактам.</h3>\n      </div>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        name=\"order\"\n        onFinish={onFinish}\n        initialValues={{\n          deliveryMethodId: 1,\n          orderStatusId: 1,\n          paymentMethod: \"Наличные\",\n          products: [{ id: null, quantity: 1 }]\n        }}\n        scrollToFirstError\n        style={{ maxWidth: 750, margin: \"0 auto\", paddingBottom: 30 }}\n      >\n        <Products form={form} products={products} productsLoading={productsLoading} />\n        <OrderFields form={form}/>\n        <CustomerFields validatePhone/>\n        <Form.Item\n          name=\"notes\"\n          label=\"Дополнительные условия и пожелания\"\n        >\n          <Input.TextArea/>\n        </Form.Item>\n        <Form.Item shouldUpdate>\n          {() => {\n            const productsValue = form.getFieldValue(\"products\") || [];\n            const totalPrice = productsValue.reduce((result, val = {}) => {\n              const product = products.find((pr => pr.id === val.id)) || {};\n              return result + ((val.quantity * product.price) || 0);\n            }, 0)\n            return `Итого к оплате: ${totalPrice} BYN`;\n          }}\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\" size=\"large\" loading={loading}>\n            Отправить\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n};\n\nexport default OrderForm;","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Admin from \"./pages/admin/Admin\";\nimport './App.css';\nimport Login from \"./pages/login/Login\";\nimport { selectUser, setUser } from \"./config/authSlice\";\nimport moment from \"moment\";\nimport 'moment/locale/ru';\nimport OrderForm from \"./pages/order-form/OrderForm\";\n\nmoment.locale('ru');\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  const user = useSelector(selectUser);\n\n  useEffect(() => {\n    const userFromStorage = JSON.parse(localStorage.getItem(\"user\"));\n\n    if (userFromStorage) {\n      dispatch(setUser(userFromStorage));\n    }\n  }, [dispatch]);\n\n  return user ?\n    <Admin/>\n    :\n    <Switch>\n      <Route exact path=\"/\">\n        <Login/>\n      </Route>\n      <Route exact path=\"/order_form\">\n        <OrderForm/>\n      </Route>\n    </Switch>;\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport authReducer from './authSlice';\n\nexport default configureStore({\n  reducer: {\n    auth: authReducer,\n  },\n});\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'react-app-polyfill/stable'\nimport React from 'react';\nimport { ConfigProvider } from 'antd';\nimport locale from 'antd/lib/locale/ru_RU';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './config/store';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConfigProvider locale={locale}>\n      <BrowserRouter>\n        <App/>\n      </BrowserRouter>\n    </ConfigProvider>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}